(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    366502,       7403]
NotebookOptionsPosition[    363489,       7306]
NotebookOutlinePosition[    363847,       7322]
CellTagsIndexPosition[    363804,       7319]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"y_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[Epsilon]", " ", "y"}]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   SubscriptBox["y", "0"], "+", 
   RowBox[{"\[Epsilon]", " ", 
    SubscriptBox["y", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "2"], " ", 
    SubscriptBox["y", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"y", "[", "\[Epsilon]", "]"}], ",", "\[Epsilon]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"F", "[", "\[Epsilon]", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"y", ",", "\[Epsilon]"}], "]"}], ",", "\[Epsilon]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6676717053167057`*^9, 3.667671753095393*^9}, {
  3.6676778852310953`*^9, 3.6676779914593067`*^9}, {3.6676782270497093`*^9, 
  3.667678239307734*^9}, {3.667678338877925*^9, 3.6676783397897987`*^9}, {
  3.667679803181053*^9, 3.6676798584661913`*^9}, {3.667680310171049*^9, 
  3.6676803264015713`*^9}, {3.6676805343375263`*^9, 3.667680535600713*^9}, {
  3.6680600314268513`*^9, 3.668060031497665*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"3", " ", 
     SubscriptBox["y", "0"], " ", "\[Epsilon]"}], "2"], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"15", " ", 
        SubsuperscriptBox["y", "0", "2"]}], "8"], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SubscriptBox["y", "1"]}], "2"]}], ")"}], " ", 
    SuperscriptBox["\[Epsilon]", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "16"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "35"}], " ", 
       SubsuperscriptBox["y", "0", "3"]}], "+", 
      RowBox[{"60", " ", 
       SubscriptBox["y", "0"], " ", 
       SubscriptBox["y", "1"]}], "-", 
      RowBox[{"24", " ", 
       SubscriptBox["y", "2"]}]}], ")"}], " ", 
    SuperscriptBox["\[Epsilon]", "3"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "4"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {
   1, Rational[-3, 2] Subscript[$CellContext`y, 0], 
    Rational[15, 8] Subscript[$CellContext`y, 0]^2 + 
    Rational[-3, 2] Subscript[$CellContext`y, 1], 
    Rational[1, 16] ((-35) Subscript[$CellContext`y, 0]^3 + 
     60 Subscript[$CellContext`y, 0] Subscript[$CellContext`y, 1] - 24 
     Subscript[$CellContext`y, 2])}, 0, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.667677971821041*^9, 3.667677992920362*^9}, 
   3.667678239635149*^9, 3.667678352969513*^9, {3.667679805364263*^9, 
   3.667679859905422*^9}, {3.6676803058915253`*^9, 3.667680326954032*^9}, 
   3.667680536227566*^9, 3.6680600366842537`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"3", " ", "y"}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"y", " ", "\[Epsilon]"}]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.667677971821041*^9, 3.667677992920362*^9}, 
   3.667678239635149*^9, 3.667678352969513*^9, {3.667679805364263*^9, 
   3.667679859905422*^9}, {3.6676803058915253`*^9, 3.667680326954032*^9}, 
   3.667680536227566*^9, 3.668060036703867*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "\[Alpha]", ",", "coefs", ",", "fractionalCoefs"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"1", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "\[Epsilon]_", "]"}], ":=", " ", 
  RowBox[{
   SubscriptBox["x", "0"], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "\[Alpha]"], " ", 
    SubscriptBox["x", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"2", "\[Alpha]"}]], " ", 
    SubscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"coefs", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "\[Epsilon]", "]"}], "+", "1"}], ")"}], "3"], "-", 
      
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"x", "[", "\[Epsilon]", "]"}]}]}], " ", "]"}], ",", 
    "\[Epsilon]", ",", "Simplify"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fractionalCoefs", "=", 
  RowBox[{"Most", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"coefs", ",", "\[Epsilon]", ",", "#"}], "]"}], "\[Equal]", 
      "0"}], "&"}], "/@", 
    RowBox[{"Exponent", "[", 
     RowBox[{"coefs", ",", "\[Epsilon]", ",", "List"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "fractionalCoefs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", "fractionalCoefs", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.667693988316218*^9, 3.667694181250511*^9}, {
   3.667694219896661*^9, 3.6676942202551107`*^9}, {3.6676942628324413`*^9, 
   3.667694379139786*^9}, {3.66770014194976*^9, 3.667700152339325*^9}, {
   3.66770028824797*^9, 3.66770035846412*^9}, {3.667700413952147*^9, 
   3.667700422854439*^9}, {3.667700923150148*^9, 3.66770101873211*^9}, {
   3.667701092142642*^9, 3.6677011013894463`*^9}, {3.667701218644265*^9, 
   3.667701234633789*^9}, {3.6677012651047363`*^9, 3.667701479404488*^9}, {
   3.667701511032072*^9, 3.667701512110252*^9}, {3.667701553698875*^9, 
   3.6677016871491137`*^9}, {3.667701761251251*^9, 3.667701781819333*^9}, 
   3.667701820680245*^9, {3.6677018840099497`*^9, 3.6677019425272093`*^9}, {
   3.667702141057212*^9, 3.66770216051833*^9}, {3.6677022518515787`*^9, 
   3.667702339058919*^9}, {3.667702381417782*^9, 3.667702523479383*^9}, {
   3.667702785464302*^9, 3.667702814326004*^9}, {3.6677028634831448`*^9, 
   3.66770287284944*^9}, {3.6677030173821993`*^9, 3.667703181771153*^9}, {
   3.667703255788628*^9, 3.6677032906434717`*^9}, {3.6677033554162817`*^9, 
   3.667703357158847*^9}, {3.667703445286006*^9, 3.667703484377431*^9}, {
   3.667703668938402*^9, 3.6677036918488083`*^9}, {3.667703867678966*^9, 
   3.667703988262033*^9}, {3.667704196778186*^9, 3.6677042224512587`*^9}, {
   3.667704276795123*^9, 3.667704314023628*^9}, {3.6677043641000557`*^9, 
   3.667704371346223*^9}, {3.667704748588993*^9, 3.667704750740423*^9}, {
   3.66770486237845*^9, 3.667704902280711*^9}, {3.6677371722639914`*^9, 
   3.667737182310391*^9}, {3.667737248521969*^9, 3.667737344527327*^9}, {
   3.667754658236014*^9, 3.667754677443713*^9}, {3.667755050637122*^9, 
   3.667755130042385*^9}, 3.6677801310155687`*^9, {3.667780373441811*^9, 
   3.667780373544582*^9}, {3.6678830091258307`*^9, 3.6678830092522163`*^9}, {
   3.667883930414097*^9, 3.6678839430523252`*^9}, {3.667883974767069*^9, 
   3.667883978593656*^9}, {3.667884294157206*^9, 3.667884297811181*^9}, {
   3.6678846304319897`*^9, 3.6678846323531857`*^9}, {3.6678848187882357`*^9, 
   3.667884819745455*^9}, {3.667885006212473*^9, 3.667885006461391*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SubscriptBox["x", "0"]}], ")"}], "3"], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Epsilon]", 
    RowBox[{"1", "/", "3"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SubscriptBox["x", "0"]}], ")"}], "2"], " ", 
   SubscriptBox["x", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], " ", 
   SubsuperscriptBox["x", "2", "3"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Epsilon]", 
    RowBox[{"2", "/", "3"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SubscriptBox["x", "0"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["x", "0"]}], ")"}], " ", 
      SubscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", 
    RowBox[{"5", "/", "3"}]], " ", 
   SubscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", 
    RowBox[{"4", "/", "3"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["x", "0"]}], ")"}], " ", 
      SubsuperscriptBox["x", "2", "2"]}]}], ")"}]}], "+", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["x", "1", "3"], "+", 
     RowBox[{"6", " ", 
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "0"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"6", " ", 
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6678839935177937`*^9, 3.667884298276287*^9, 
  3.6678846215546923`*^9, 3.667885223757442*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SubscriptBox["x", "0"]}], ")"}], "3"], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["x", "0"]}], ")"}], "2"], " ", 
     SubscriptBox["x", "1"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SubscriptBox["x", "0"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["x", "0"]}], ")"}], " ", 
        SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "3"], "+", 
     RowBox[{"6", " ", 
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{
      SubscriptBox["x", "0"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"6", " ", 
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["x", "2"]}]}], ")"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubsuperscriptBox["x", "1", "2"], " ", 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["x", "0"]}], ")"}], " ", 
      SubsuperscriptBox["x", "2", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", 
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6678839935177937`*^9, 3.667884298276287*^9, 
  3.6678846215546923`*^9, 3.667885223777392*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["x", "0"]}], ")"}], "3"], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["x", "0"]}], ")"}], "2"], " ", 
         SubscriptBox["x", "1"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["x", "0"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["x", "0"]}], ")"}], " ", 
            SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubsuperscriptBox["x", "1", "3"], "+", 
         RowBox[{"6", " ", 
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["x", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "0"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"6", " ", 
             SubscriptBox["x", "1"], " ", 
             SubscriptBox["x", "2"]}]}], ")"}]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["x", "1"]}], "+", 
         RowBox[{"3", " ", 
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox["x", "2"]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["x", "0"]}], ")"}], " ", 
          SubsuperscriptBox["x", "2", "2"]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", 
            SubscriptBox["x", "1"], " ", 
            SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6678839935177937`*^9, 3.667884298276287*^9, 
  3.6678846215546923`*^9, 3.667885223789584*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "3"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6678839935177937`*^9, 3.667884298276287*^9, 
  3.6678846215546923`*^9, 3.667885223804141*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["x", "0"]}], ")"}], "3"], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["x", "0"]}], ")"}], " ", 
       SubsuperscriptBox["x", "1", "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["x", "0"]}], ")"}], "2"], " ", 
       SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["x", "1", "3"], "-", 
      SubscriptBox["x", "2"], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["x", "0"]}], ")"}], " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"3", " ", 
      SubscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["x", "0"]}], ")"}], " ", 
         SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"3", " ", 
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "\[Equal]", "0"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667779923431134*^9, 3.667779926459132*^9}, {
  3.667780139938225*^9, 3.667780173242634*^9}, {3.6677802264659443`*^9, 
  3.667780320894204*^9}, {3.667883049412269*^9, 3.667883130145781*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.667779926747851*^9, 3.6677801484872417`*^9, 3.667780186382126*^9, 
   3.6677802272328787`*^9, {3.667780300728829*^9, 3.66778032129657*^9}, {
   3.6678830610750637`*^9, 3.667883130506798*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "\[Epsilon]_", "]"}], ":=", " ", 
  RowBox[{
   SubscriptBox["x", "0"], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "\[Alpha]"], " ", 
    SubscriptBox["x", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"2", "\[Alpha]"}]], " ", 
    SubscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coefs", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", "\[Epsilon]", "]"}], "-", "1"}], ")"}], "2"], "+",
        "\[Epsilon]"}], " ", "]"}], ",", "\[Epsilon]", ",", "Simplify"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fractionalCoefs", "=", 
   RowBox[{"Most", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"coefs", ",", "\[Epsilon]", ",", "#"}], "]"}], "\[Equal]", 
       "0"}], "&"}], "/@", 
     RowBox[{"Exponent", "[", 
      RowBox[{"coefs", ",", "\[Epsilon]", ",", "List"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "fractionalCoefs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", "fractionalCoefs", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.667693988316218*^9, 3.667694181250511*^9}, {
   3.667694219896661*^9, 3.6676942202551107`*^9}, {3.6676942628324413`*^9, 
   3.667694379139786*^9}, {3.66770014194976*^9, 3.667700152339325*^9}, {
   3.66770028824797*^9, 3.66770035846412*^9}, {3.667700413952147*^9, 
   3.667700422854439*^9}, {3.667700923150148*^9, 3.66770101873211*^9}, {
   3.667701092142642*^9, 3.6677011013894463`*^9}, {3.667701218644265*^9, 
   3.667701234633789*^9}, {3.6677012651047363`*^9, 3.667701479404488*^9}, {
   3.667701511032072*^9, 3.667701512110252*^9}, {3.667701553698875*^9, 
   3.6677016871491137`*^9}, {3.667701761251251*^9, 3.667701781819333*^9}, 
   3.667701820680245*^9, {3.6677018840099497`*^9, 3.6677019425272093`*^9}, {
   3.667702141057212*^9, 3.66770216051833*^9}, {3.6677022518515787`*^9, 
   3.667702339058919*^9}, {3.667702381417782*^9, 3.667702523479383*^9}, {
   3.667702785464302*^9, 3.667702814326004*^9}, {3.6677028634831448`*^9, 
   3.66770287284944*^9}, {3.6677030173821993`*^9, 3.667703181771153*^9}, {
   3.667703255788628*^9, 3.6677032906434717`*^9}, {3.6677033554162817`*^9, 
   3.667703357158847*^9}, {3.667703445286006*^9, 3.667703484377431*^9}, {
   3.667703668938402*^9, 3.6677036918488083`*^9}, {3.667703867678966*^9, 
   3.667703988262033*^9}, {3.667704196778186*^9, 3.6677042224512587`*^9}, {
   3.667704276795123*^9, 3.667704314023628*^9}, {3.6677043641000557`*^9, 
   3.667704371346223*^9}, {3.667704748588993*^9, 3.667704750740423*^9}, {
   3.66770486237845*^9, 3.6677049338465137`*^9}, {3.6677064733204107`*^9, 
   3.66770648427241*^9}, {3.6677065486295424`*^9, 3.6677065514763937`*^9}, {
   3.667754687251618*^9, 3.667754691529718*^9}, {3.667754873396306*^9, 
   3.667754879442338*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["x", "0"]}], ")"}], "2"], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["x", "0"]}], ")"}], " ", 
         SubscriptBox["x", "1"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"1", "+", 
         SubsuperscriptBox["x", "1", "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["x", "0"]}], ")"}], " ", 
          SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["x", "2"]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6677049484603453`*^9, {3.667706547162325*^9, 3.667706557875526*^9}, {
   3.6677546884562902`*^9, 3.667754692045128*^9}, 3.667754879804843*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      RowBox[{"-", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", "\[ImaginaryI]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6677049484603453`*^9, {3.667706547162325*^9, 3.667706557875526*^9}, {
   3.6677546884562902`*^9, 3.667754692045128*^9}, 3.6677548798256893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Epsilon]", ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "\[Epsilon]_", "]"}], ":=", " ", 
  RowBox[{
   SubscriptBox["x", "0"], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "\[Alpha]"], " ", 
    SubscriptBox["x", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"2", "\[Alpha]"}]], " ", 
    SubscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"coefs", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"x", "[", "\[Epsilon]", "]"}], "3"], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "+", "\[Epsilon]"}], ")"}], 
       RowBox[{"x", "[", "\[Epsilon]", "]"}]}], "+", 
      RowBox[{"2", "\[Epsilon]"}]}], "]"}], ",", "\[Epsilon]", ",", 
    "Simplify"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fractionalCoefs", "=", 
  RowBox[{"Most", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"coefs", ",", "\[Epsilon]", ",", "#"}], "]"}], "\[Equal]", 
      "0"}], "&"}], "/@", 
    RowBox[{"Exponent", "[", 
     RowBox[{"coefs", ",", "\[Epsilon]", ",", "List"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "fractionalCoefs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", "fractionalCoefs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "3"], "-", 
     RowBox[{"4", "a"}]}], "\[Equal]", "0"}], ",", "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.667708815620915*^9, 3.6677089394316397`*^9}, {
   3.667709018926409*^9, 3.667709087093141*^9}, {3.667709134298875*^9, 
   3.667709165896058*^9}, {3.667709238930175*^9, 3.6677092771311502`*^9}, {
   3.66775469726639*^9, 3.667754770038521*^9}, 3.6677550450849543`*^9, {
   3.667887175043502*^9, 3.667887189386198*^9}, {3.6678873875070963`*^9, 
   3.667887420756116*^9}, 3.667887522582418*^9, 3.667887623616042*^9, {
   3.667887729224031*^9, 3.6678877532259893`*^9}, 3.667887971567577*^9, {
   3.667888199309581*^9, 3.667888199621393*^9}, {3.6678883491064177`*^9, 
   3.667888349274349*^9}, {3.667888395328217*^9, 3.66788843578822*^9}, {
   3.6679327329483852`*^9, 3.667932785387232*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["x", "0"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SubsuperscriptBox["x", "0", "2"]}], ")"}]}], "+", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{"(", 
    RowBox[{"2", "-", 
     SubscriptBox["x", "0"], "-", 
     RowBox[{"4", " ", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubsuperscriptBox["x", "0", "2"], " ", 
      SubscriptBox["x", "1"]}]}], ")"}]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Epsilon]", "5"], " ", 
   SubscriptBox["x", "1"], " ", 
   SubsuperscriptBox["x", "2", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "6"], " ", 
   SubsuperscriptBox["x", "2", "3"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Epsilon]", "4"], " ", 
   SubscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], "+", 
     RowBox[{
      SubscriptBox["x", "0"], " ", 
      SubscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["x", "0"], " ", 
      SubsuperscriptBox["x", "1", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"3", " ", 
         SubsuperscriptBox["x", "0", "2"]}]}], ")"}], " ", 
      SubscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["x", "1", "3"], "-", 
     SubscriptBox["x", "2"], "+", 
     RowBox[{"6", " ", 
      SubscriptBox["x", "0"], " ", 
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["x", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.6678877415437593`*^9, 3.667887753843308*^9}, {
   3.66788796820072*^9, 3.667887972547386*^9}, 3.6678882010272207`*^9, 
   3.667888350683281*^9, {3.6678884012165623`*^9, 3.667888436149225*^9}, {
   3.667932742564575*^9, 3.6679327859542713`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SubsuperscriptBox["x", "0", "2"]}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"2", "-", 
     SubscriptBox["x", "0"], "-", 
     RowBox[{"4", " ", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubsuperscriptBox["x", "0", "2"], " ", 
      SubscriptBox["x", "1"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["x", "0"], " ", 
      SubsuperscriptBox["x", "1", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"3", " ", 
         SubsuperscriptBox["x", "0", "2"]}]}], ")"}], " ", 
      SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "3"], "-", 
     SubscriptBox["x", "2"], "+", 
     RowBox[{"6", " ", 
      SubscriptBox["x", "0"], " ", 
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     SubscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       RowBox[{
        SubscriptBox["x", "0"], " ", 
        SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "\[Equal]", "0"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6678877415437593`*^9, 3.667887753843308*^9}, {
   3.66788796820072*^9, 3.667887972547386*^9}, 3.6678882010272207`*^9, 
   3.667888350683281*^9, {3.6678884012165623`*^9, 3.667888436149225*^9}, {
   3.667932742564575*^9, 3.667932785970127*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["x", "0"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SubsuperscriptBox["x", "0", "2"]}], ")"}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"2", "-", 
         SubscriptBox["x", "0"], "-", 
         RowBox[{"4", " ", 
          SubscriptBox["x", "1"]}], "+", 
         RowBox[{"3", " ", 
          SubsuperscriptBox["x", "0", "2"], " ", 
          SubscriptBox["x", "1"]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["x", "1"]}], "+", 
         RowBox[{"3", " ", 
          SubscriptBox["x", "0"], " ", 
          SubsuperscriptBox["x", "1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"3", " ", 
             SubsuperscriptBox["x", "0", "2"]}]}], ")"}], " ", 
          SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubsuperscriptBox["x", "1", "3"], "-", 
         SubscriptBox["x", "2"], "+", 
         RowBox[{"6", " ", 
          SubscriptBox["x", "0"], " ", 
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"3", " ", 
         SubscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["x", "1", "2"], "+", 
           RowBox[{
            SubscriptBox["x", "0"], " ", 
            SubscriptBox["x", "2"]}]}], ")"}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"3", " ", 
         SubscriptBox["x", "1"], " ", 
         SubsuperscriptBox["x", "2", "2"]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6678877415437593`*^9, 3.667887753843308*^9}, {
   3.66788796820072*^9, 3.667887972547386*^9}, 3.6678882010272207`*^9, 
   3.667888350683281*^9, {3.6678884012165623`*^9, 3.667888436149225*^9}, {
   3.667932742564575*^9, 3.6679327859822283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6678877415437593`*^9, 3.667887753843308*^9}, {
   3.66788796820072*^9, 3.667887972547386*^9}, 3.6678882010272207`*^9, 
   3.667888350683281*^9, {3.6678884012165623`*^9, 3.667888436149225*^9}, {
   3.667932742564575*^9, 3.667932785996397*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6678877415437593`*^9, 3.667887753843308*^9}, {
   3.66788796820072*^9, 3.667887972547386*^9}, 3.6678882010272207`*^9, 
   3.667888350683281*^9, {3.6678884012165623`*^9, 3.667888436149225*^9}, {
   3.667932742564575*^9, 3.667932786006736*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6679331365159283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SubsuperscriptBox["x", "0", "2"]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"2", "-", 
      SubscriptBox["x", "0"], "-", 
      RowBox[{"4", " ", 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{"3", " ", 
       SubsuperscriptBox["x", "0", "2"], " ", 
       SubscriptBox["x", "1"]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{"3", " ", 
       SubscriptBox["x", "0"], " ", 
       SubsuperscriptBox["x", "1", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"3", " ", 
          SubsuperscriptBox["x", "0", "2"]}]}], ")"}], " ", 
       SubscriptBox["x", "2"]}]}], "\[Equal]", "0"}]}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.667887530735282*^9, 3.667887571900599*^9}, 
   3.667887636575453*^9, {3.6679308893950987`*^9, 3.6679308896191673`*^9}, {
   3.6679312888278637`*^9, 3.6679313120671864`*^9}, {3.66793189316525*^9, 
   3.667931918557012*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", 
      FractionBox["1", "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "8"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "\[Rule]", "2"}], ",", 
     RowBox[{
      SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.667887533701379*^9, 3.667887572814755*^9}, 
   3.6678876369338207`*^9, 3.667930890013339*^9, {3.667931289341053*^9, 
   3.66793130299924*^9}, 3.667931606299295*^9, {3.6679319025996027`*^9, 
   3.6679319191826468`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "\[Epsilon]_", "]"}], ":=", " ", 
  RowBox[{
   SubscriptBox["x", "0"], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "\[Alpha]"], " ", 
    SubscriptBox["x", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"2", "\[Alpha]"}]], " ", 
    SubscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"coefs", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"x", "[", "\[Epsilon]", "]"}]}]}]], "-", 
      RowBox[{"x", "[", "\[Epsilon]", "]"}]}], "]"}], ",", "\[Epsilon]", ",", 
    "Simplify"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fractionalCoefs", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"coefs", ",", "\[Epsilon]", ",", "#"}], "]"}], "\[Equal]", 
     "0"}], "&"}], "/@", 
   RowBox[{"Exponent", "[", 
    RowBox[{"coefs", ",", "\[Epsilon]", ",", "List"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "fractionalCoefs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", "fractionalCoefs", "]"}]}], "Input",
 CellChangeTimes->{{3.6678906534229803`*^9, 3.6678906880867434`*^9}, {
  3.667890882251934*^9, 3.667890883484666*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubscriptBox["x", "0"]}], "-", 
  RowBox[{"\[Epsilon]", " ", 
   SubscriptBox["x", "1"]}], "-", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], " ", 
   SubscriptBox["x", "2"]}], "+", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "0"], "+", 
       RowBox[{"\[Epsilon]", " ", 
        SubscriptBox["x", "1"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Epsilon]", "2"], " ", 
        SubscriptBox["x", "2"]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.6678906752275476`*^9, 3.667890697490615*^9}, 
   3.6678908838967953`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     SubscriptBox["x", "0"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["x", "1"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["x", "2"]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6678906752275476`*^9, 3.667890697490615*^9}, 
   3.667890883908291*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"1", "-", 
         SubscriptBox["x", "0"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["x", "1"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["x", "2"]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6678906752275476`*^9, 3.667890697490615*^9}, 
   3.6678908839137774`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6678906752275476`*^9, 3.667890697490615*^9}, 
   3.6678908839213543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "u"}], ")"}]}], ",", "u"}], "]"}]}], "\[Equal]", 
    RowBox[{"E", "^", "t"}]}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.667891124840703*^9, 3.667891136849502*^9}, {
  3.667891237470316*^9, 3.667891267012239*^9}, {3.667892027399445*^9, 
  3.667892030493596*^9}, {3.667892156392744*^9, 3.667892156511307*^9}, {
  3.66789335217003*^9, 3.667893394127496*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"u", "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", "t"]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6678911381242933`*^9, {3.667891239437396*^9, 3.667891268004773*^9}, {
   3.667892027891129*^9, 3.667892030797349*^9}, 3.667892156924602*^9, {
   3.667893363624035*^9, 3.667893394524497*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Alpha]", ",", "\[Epsilon]", ",", "g", ",", "c", ",", "dxx", ",", "dyy", 
   ",", "v", ",", "u", ",", "x", ",", "y", ",", "xx", ",", "yy"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxx", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[DoublePrime]"], "[", "t", "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Epsilon]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "[", "t", "]"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dyy", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[DoublePrime]"], "[", "t", "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Epsilon]"}], " ", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox["y", "\[Prime]"], "[", "t", "]"}]}], "-", "g"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dyy", ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]"], "[", "0", "]"}], "\[Equal]", "v"}], 
     ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "y", ",",
    "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dxx", ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "[", "0", "]"}], "\[Equal]", "u"}], 
     ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "x", ",",
    "t"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.667906849962834*^9, 3.667906993017202*^9}, {
  3.667912455054846*^9, 3.667912463172584*^9}, {3.6679125521913157`*^9, 
  3.667912573701663*^9}, {3.667912614359437*^9, 3.667912638684379*^9}, {
  3.667912677151457*^9, 3.667912831318543*^9}, {3.667912884412724*^9, 
  3.667912994001116*^9}, {3.6679130870980043`*^9, 3.6679130882547894`*^9}, {
  3.667913128472665*^9, 3.6679131402881107`*^9}, {3.667913205090391*^9, 
  3.667913216808165*^9}, {3.667913251199773*^9, 3.6679132523411303`*^9}, {
  3.667913369893839*^9, 3.667913403524667*^9}, {3.667913434371111*^9, 
  3.667913564716263*^9}, {3.667913598880383*^9, 3.667913750198161*^9}, {
  3.667913790809225*^9, 3.6679138302105923`*^9}, {3.667913882544395*^9, 
  3.6679140374481153`*^9}, {3.667914128456788*^9, 3.667914296300569*^9}, {
  3.667914350163951*^9, 3.667914357779591*^9}, {3.6679393181305237`*^9, 
  3.6679393464685926`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "5"}], " ", 
        SuperscriptBox["t", "2"]}], "+", 
       RowBox[{"t", " ", "v"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6679142433015547`*^9, 3.6679142966878557`*^9}, {
  3.66791435242246*^9, 3.667914358165498*^9}, {3.6679393004230824`*^9, 
  3.667939347084362*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{"t", " ", "u"}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6679142433015547`*^9, 3.6679142966878557`*^9}, {
  3.66791435242246*^9, 3.667914358165498*^9}, {3.6679393004230824`*^9, 
  3.6679393471018*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667914109854644*^9, 3.6679141113409967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "g"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "500"}], ";", 
  RowBox[{"b", "=", "2"}], ";", 
  RowBox[{"c", "=", "500"}], ";", 
  RowBox[{"g", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"u", " ", "t"}]}], ",", 
      RowBox[{"a", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"g", " ", 
           SuperscriptBox["t", "2"]}], "2"]}], "+", 
        RowBox[{"v", " ", "t"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["u", "2"], "+", 
        SuperscriptBox["v", "2"]}], "\[Equal]", 
       SuperscriptBox["c", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "t"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], "g", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["a", "u"], ")"}], "2"]}], "+", 
     RowBox[{"v", 
      RowBox[{"(", 
       FractionBox["a", "u"], ")"}]}]}], "\[Equal]", "b"}], ",", "v"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "/.", "%"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox["c", "2"], "-", 
       SuperscriptBox["u", "2"]}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["c", "2"], "-", 
        SuperscriptBox["u", "2"]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1000"}], ",", "1000"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dy", "[", 
    RowBox[{"t_", ",", "v_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "t"}], " ", "+", "v"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dx", "[", 
    RowBox[{"t_", ",", "u_"}], "]"}], ":=", "u"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{
    RowBox[{"dx", "[", 
     RowBox[{"349.107", ",", "1.42872"}], "]"}], ",", 
    RowBox[{"dy", "[", 
     RowBox[{"357.107", ",", "1.42872"}], "]"}]}], "]"}], "/", 
  "c"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{
    RowBox[{"dx", "[", 
     RowBox[{"5.05129", ",", "98.9846"}], "]"}], ",", 
    RowBox[{"dy", "[", 
     RowBox[{"499.974", ",", "98.9846"}], "]"}]}], "]"}], "/", 
  "c"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{"357.107", "/", "349.964"}], "]"}], "*", 
  RowBox[{"180", "/", "Pi"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{"499.974", "/", "5.05129"}], "]"}], "*", 
  RowBox[{"180", "/", "Pi"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.668545751081085*^9, 3.6685458235913486`*^9}, {
   3.668545913464793*^9, 3.6685459432297287`*^9}, {3.6685487746936073`*^9, 
   3.668548811460371*^9}, {3.668548852539253*^9, 3.668548881833708*^9}, 
   3.6685489655768967`*^9, {3.668549108415662*^9, 3.668549158446321*^9}, {
   3.668549237021196*^9, 3.6685492899166527`*^9}, {3.6685493494607553`*^9, 
   3.6685493747396383`*^9}, {3.6685494171757717`*^9, 
   3.6685495121859627`*^9}, {3.668549550091041*^9, 3.668549580058983*^9}, {
   3.668549614459042*^9, 3.668549708857081*^9}, {3.6685504487729073`*^9, 
   3.66855058725809*^9}, {3.6685506423701477`*^9, 3.6685506446172132`*^9}, {
   3.6685514188895187`*^9, 3.6685514916698217`*^9}, {3.66855155927045*^9, 
   3.66855157704465*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      RowBox[{"-", "349.96354736071055`"}]}], ",", 
     RowBox[{"v", "\[Rule]", 
      RowBox[{"-", "357.1071485124706`"}]}], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"-", "1.4287202303520075`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", "349.96354736071055`"}], ",", 
     RowBox[{"v", "\[Rule]", "357.1071485124706`"}], ",", 
     RowBox[{"t", "\[Rule]", "1.4287202303520075`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      RowBox[{"-", "5.0512888165030745`"}]}], ",", 
     RowBox[{"v", "\[Rule]", 
      RowBox[{"-", "499.97448383021776`"}]}], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"-", "98.98463900274317`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Rule]", "5.0512888165030745`"}], ",", 
     RowBox[{"v", "\[Rule]", "499.97448383021776`"}], ",", 
     RowBox[{"t", "\[Rule]", "98.98463900274317`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.668551577297268*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"v", "\[Rule]", 
    FractionBox[
     RowBox[{"625000", "+", 
      SuperscriptBox["u", "2"]}], 
     RowBox[{"250", " ", "u"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.6685515773018007`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
dDIxKje5+u8fCf8Dm4hWGw==
     "]], 
    LineBox[{{-0.34060233354277114`, -1442.0765367019915`}, \
{-0.25997006464989714`, 1442.078671847561}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1000, 1000}, {-1442.0765367019915`, 1442.078671847561}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.668551577347752*^9}],

Cell[BoxData["7.139283131833582`"], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.668551577354085*^9}],

Cell[BoxData["9.80350986976936`"], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.6685515773570127`*^9}],

Cell[BoxData["45.57879595035404`"], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.668551577359414*^9}],

Cell[BoxData["89.4211543970604`"], "Output",
 CellChangeTimes->{
  3.668545823971017*^9, {3.66854590358477*^9, 3.668545943650754*^9}, {
   3.6685487940491037`*^9, 3.66854881180726*^9}, 3.6685488822130547`*^9, 
   3.6685491587106733`*^9, {3.668549255855363*^9, 3.668549281831624*^9}, 
   3.668549375124682*^9, {3.6685494254022093`*^9, 3.668549512788581*^9}, {
   3.668549550697701*^9, 3.668549580404099*^9}, {3.6685496272180853`*^9, 
   3.6685497092253733`*^9}, {3.66855057295313*^9, 3.6685505879491673`*^9}, 
   3.668550645199045*^9, {3.668551443570472*^9, 3.6685514920427*^9}, 
   3.66855157736178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["integrate (x''=-x')", "WolframAlphaLong",
 CellChangeTimes->{{3.668555801108301*^9, 3.668555810130784*^9}, 
   3.668556044641161*^9, {3.6685569936838293`*^9, 3.6685570154663258`*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate (x''=-x')", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"x''[t] == -x'[t]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox[
                 "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                 "t", ")"}], "\[LongEqual]", 
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]", MultilineFunction -> None],
                    "(", "t", ")"}]}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Autonomous equation", "scanner" -> "ODE", "id" -> 
     "AutonomousEquation", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              RowBox[{
                RowBox[{
                  SuperscriptBox[
                  "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                  "t", ")"}], "\[LongEqual]", 
                RowBox[{"-", 
                  RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "t", 
                    ")"}]}]}], HoldForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Autonomous.html", "text" -> 
           "Autonomous equation"}, {}]}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "ODE classification", "scanner" -> "ODE", "id" -> 
     "ODEClassification", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"second\[Hyphen]order linear ordinary differential equation\"", 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FullSimplify[x''[t] == -x'[t]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                RowBox[{
                  SuperscriptBox[
                  "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                  "t", ")"}], "+", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  "(", "t", ")"}]}], "\[LongEqual]", "0"}], TraditionalForm]],
           "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Differential equation solution", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"DSolve[{x''[t] == -x'[t]}, x[t], t]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"x", "(", "t", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "t"}]]}], "+", 
                SubscriptBox["c", "2"]}]}], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "DifferentialEquationSolution__Step-by-step solution"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Plots of sample individual solutions", "scanner" -> 
     "ODE", "id" -> "PlotsOfSampleIndividualSolutions", "position" -> "600", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxV0GtIEwAQB/A5N8WVE1vOx5rlA3HlSE1pYENLo1oEoowSMSOWlCaTVuGj
bUqGpiOXaQw1MspolOWLOQdmqYgt1zBNdC51tbVmWmpqOKtVH/yPDo7j9+Xu
+AedFqacIRIIhAN/+9/8vxbir6St0usY5fEbvi7mb7q0TQGTpdNz7qFKmCaX
TT9pbYMjlzM8TZ1qWGT76dd9uAcm9ee+z+rqhTt6o9xU9AFYO7Or9EXOK7ii
oKCTVTUE3xS8vb/o0MOslLh2duMwbIkLO1vKHYEnK58l1ZPewTUP1or9O8bg
zMGJDm/5uPPf9JL+kvMGeN7AqtZHGeGGAAY1InzKuX9ALySSZuA2/9D0YqrJ
mYeVc4jP+AAfXecTg5gf4YeKBNflfWZ458nkC7tTLPC6D4HQlP0JvtdfVpbf
ZIXTrHWGLWOfYXvM1Xhf9iycGlPAC5R9ceb/2tojNc3Bum5jc57gK0ztJeab
p77BS0Kzz1jrArwn1mR5XrUId52Y50ZkL8FvapWKl4LvsGudwMbKWIYpud2x
2swVmC0y3eFWrsLnzJrEFtUPeLT+SIuRtgYf1xy7yyizw/W1DVTJ73WYmaSQ
eGh+OfPLk+v6pA5YMlzjsLQTEjacET3EJU+4wGpfwYo7xRV+PD+omxST4OTR
g0U3mG7wI+Yaf2bcHY667OeRQ6bArJDyopGszbDMUT3ZUOgFp1/cOu112xuW
Omb7bqlpMFv01MWtmQ7b8wO1qtQAeLAijJ/M2Q6H013EhddC4EbNXstAHgvm
6SKVO2zRcFBiaLSnlOO8F8wL9jq1H/4DUjRE6Q==
                    "]]}}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    Method -> {}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQDQEf7BlQwCh/lD/KH+UzMAAAzHVQDg==
                    
                    "]]}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
                    PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}]}, {
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}, {
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1: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
lKkUh50+3N6m+5//B5bn504=
                    "]]}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    Method -> {}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxV1Hs01GkYB/BZ7cZEOEZYd8mmC4o41u2rSEohuWXJxBIKm81yrEqXbSqk
RFGtS5rQRiFJklxyW5eRIRbNMK4zxk9yyS372/7b95znvOdznuf55znneTR8
Qp38RCgUigsZ//3/f5NoSrKKXq/02aLxuurj4BUCE9nPOniKYnDr2ynX+4XA
7+IbsyVkZaDsoM3qJj1udxQFigpwy9FP3ETWx59uPOChoQrP4QcvBsi8nOv+
yU+09ZCmZfntID3aNJGoK68FpoAjnF4mED3/nhqkqA3m83RnYzLPChpl/qWy
BX3jLtvsST/lMPL46ro4F7Z/RYW0mATtlkziNiTfi3onJPtZJd/fyKPpQ8Y7
M7ec9Odta21tkg0guXz+YjxpLlutrFfOEM1iPB8v0o5SRzpFFI3hYmGwaXmJ
QJe6o9Scgi3edKeeWJonUCpVl1Ah5w76j6oF858IyKYzcyETgMpovyZihMC7
3cL4XdRIlC9MxE21Emjdl9IWOMcAX3fmuXIGASnBjLgH+zZerab0eO4k4Jx5
qOPG5RzkN8ZLR0RMwMXuvLKqaCF0Puo7KFcIoSXTZrWYUILtgvoXFEkhjqiu
jn0ZVo6Nl94SOQfH0eFqImJ3vBJpWttrtjIFYF0InS3YWwOKrkHkTSEf8e7y
7taSdaBy7MZCzPiIVaHkT6c0IGw25H1V6hg+tifZGDk2wT9MOXxKMApN9Qgx
F1YLqnjcGr7dKMKNzfVoaSx4zNwLn306AoW2V0Fe/DZkqJrGtq0ZwQPqscpV
Ku1wnD9qfObkMKp2sRWp/mz4D3f9sdg0hMiBx2JTzA7UWQ1LieoMIYOR4trS
3In8q91DCqmDWMqVOGwl0QVDnybfD/M81Ovd7/vNoBsl02cyrP15iJmt+Jt+
8h+EWGrmONQNYIqrZFib3YOYDKNp5a0D+MjRpq6q70VgnEXUl7v9kGY7OO9d
6YO0eofXT5R++FkqcSbVORB9EspghHJxJd0nRVaVi4XIuK7Oag66kx5d9C7h
wsTzyoTljQ+gv+6x1rPpR69wLDrz1z6cZxbn1nL7wS5evBlm0UvO3SU1KHIA
7gXTlZuleiBacPBAw3c81AW8swme7kalIttEKp2HH5JG/fsru3Diquw9dd1B
LOTpZ77Oeo/AUnsv+stBCLQ1ly1iO8Hy/8Y83mkIrgU/ew55dEBky/DIWe4Q
zrI/16xYsOFyYe3qfVHDkHdeV3tcvB1FEWMdZdQRhN2qYDHG26C/OVVN9dYI
+EvL16rbWbBmWm6f0xlFlE/xrvW2rbANnqErlY0ivqhKJZHWjMGcPeFbDo1h
bcUdd6eiRuwxDPzFfGQMRvRTBNW3HvaLioGCUD5mfdcYOFnWomxn8WsZEQEw
79P8bK4acb5G8rTLAvjUUG2KOJV4to6ZfF1sHIwMU+2osgrMpIgELySMQ+/N
G4WtMWU4U3nnbAVViGRD5ZJVhSWYtPSsymIIEfD4bXV/VRFab/eebFkUgh3F
D4nTeApe84rGHvoETkf6WV9bzMXAfa1jBtUTCP9UXtDQlIVyl/Kbr2QJnNsA
tZCAP1HA3eDW603AzSyt8NS3SdhEzw+l3SVQ5zUdvcH0Cg5/yHvJqiGgbpZd
n3n7NHrrxTpLeQSOmtrTtW1OQDxgX8LDaQJrMqKC+wpdIb+oQckl9/5hlkHE
QokJLqXZSzDIuyVmqvnki5kk3DR0yuZJH+9XY3FkGyxmIrSWV0i/MJSnwcHE
Qsna+OudVHMwNtztXWoes8Pkq3UutzxqLtlh/i/JGaf3
                    "]]}}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
                    PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}]}, {
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {None, 
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
                   None}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}], "Column"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Sample solution family", "scanner" -> "ODE", "id" -> 
     "SampleSolutionFamily", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                AbsoluteThickness[1], {{
                  RGBColor[0.624866, 0.673302, 0.264296], 
                  BSplineCurveBox[CompressedData["
1:eJxt0Gk4VWsfBvBlJxGODBm2aRtCKoTdYB/WkgbDUShjktBoOjJ0MmQXUSlD
oeFkLIkyZaik5zFGUeapOFIoogyFY9rvs3w86/20rt913//7up6l4OJtdZSG
YRgPF4aRX9vgneHag84G7Lf0HxxOH/yvr/4p9ReHh2PgvSJrsgL53dvRDa9o
Qvj5zPszYcj20DMyC5PH/ZzMuXiRiweusP7maOC/PtXT1yz1wVx3fk0xjgHO
1/CvE2OhD3rwXP+teWkvLv5piTCc7YOZfe5rC5ac8CTLG+7h433QOlzTP3PJ
C9cc0Ldf098H42YixcuWzuFe9H88DCr74MJ2H82NnGi8Xnaz9WQ41Rd/WIXP
Yyl4wMqddXn8VNMtfRxSNuTj6j4Xpa6t/odipSjcW23NM1xy/Mk3IYVeijvm
O9SduiAu56FU9Nqwh+LA43qBepuqcabMiiUr6w8Ub0zity3QrMOfuLL8I0Pe
U3wlUJ4Tk9CAG/c/0Q661U2xqaZ3WGxQE37sHs0QK+ui+PG2rZmMmBac7TNd
0jPRSbHx2Yp+jfdt+Kl1a4Nk6FQ7u9GMU/g68dj03sD4/R0Uf64+dZ6h141j
HUrJDjfaKU4/MNkUmPUBH9XJN1eraaN4a9hSpxSnF48wwnSKeP6PX2bObDH/
iMdkPuEV12ulOPJzzWhrSj/upVszUXu6heL2mOb4e0OfcO1vtw+IlTZTbJ/a
KBBuM4CX7Vo1VT/ZRLF1Gkto5MUgrmvmIn5jO9UKt18+MLH4ghunWhACn99R
zBcVxskZ/4pX8rIGNA6+pTgCP3s46tIIPifSe2HT93qK3Vtr+i87jOKvJvCA
Bpc3FNskeyc+V/mOX1nt/OPdRB3FEVKtYtq0cbyaS32/9KVair1X/FkvKj6B
q5vN9D/j1FDc3h+85fj6SVzmnunOu3HVFA9erHeln5rCR3aXVgitrKL4Y6+i
5yD4iTtv1uGzY1dQbDRzyviqxDSOrRiZfiVeTjEzqt3HPG8GF0ueL+VSeEmx
2vpX0izLf/EFzTrHx+alFMcpen4UEpvHua9nfn8f85TiYpPVQT91FnFG4Ofk
d2lFFJekbZj77sHBPQrkfF//LKC4smZoyytRLqLpx4Dj1J5cimVaJMaIyzQi
9s2CeAEri+LCCqvIeg1uYrZnkzZ25T7FRP0Bwd7dPERTRYuNZnIKxa8Th0yV
/uYlxlsu/UxJu0mx3GmrofQcfqKpvz/LTzKW4g1JDU6BAUJEuckr86bfwin+
QRsasV0UJtheHxJ9GgMofqS8+JlvSZggdNRWBdUHQAEzrZEXyOw6kd7w2gDY
fnlcloGJEIRgxfPbMAAmStKUhmkiBPts6Ja6vACoFlJ0P4RXhCiX89TfFhsA
g+VLY/NFUZ+xie1mGQCv8SsdNlAXIbB52DjW5g95JvTYC7bovoZPseqjH3Q8
KzghWYLsUmp2mt8XRiuKD8SGiBLs6XM3V9l7w7sd3HzuxFqC7VC5alzDjeJy
d6J5nyGy8oCil7obZEqLPNbdsZbAtkp+Gl3nBoN/sm8vGSH3J/0xKuMGy9ob
9t/Yg3zHs3lytRuces4wLt+L7BcVL/fFFY4xv+Jqh5CP1beOp7jCOy0F37UC
0f7AbN05UVdI7E32XV+McgPhOl2aC1w5OVvdrSFOYNHRaabzhyH2KFTGTVuC
wB7kbDdqsYN+HVHavjrIm01HCurtYIJquvMFXeRvQ5UKNXZwXGWOO20LslTr
N+5ndnBe44lXnx7yhwP07iQ7aDEl+drZCNnwa9ezk3bwlld8vv8B5KJZK2ua
HTRXbaANByA/NxtY3GILj0sxb82XIbv/EhzJsYblPDHPuPZKEhgr9NOqZit4
b9tkOn5RisDm9Br/rTaj2FNrd0FoBPKOs9vNy8zgg6Et/8BIZGBzMb3QDIrt
xuKJK8gbN1VYpZtBC948b6MY5FczVa9DzeA7xSPf9t5GDvCtF2ahvtFJ0ZAc
5PLwq7yFprBQ1ldpawcyj6N0xEMTuCMy+5D6ejqBnaKzT2XtgRKluxiW7cgt
nPQ12E7Y5/fY8ZexDIGN9+i4tbLgIZny6mBTZAHW6ao6FgxWsbLh/gO5azFl
HWBBsxn+adF9yI5jtZMPWTBjOFaNaY38c61+/jkWzCl8ejj0CDL7mv1TdRbU
235+l04g8oDsjqlwPZhtyO9Bf4ysrDLPu2M75E9jH5wUlkX7fK4DvVtgbaVu
muYQ8oGNz4UTtaGKS0LT6SJ5tPdDUPqRKsWL/laGESXI2ER2e7IqlMYSpm8/
Q3ZuXZNwXRVerOvTqCxDLk/VVgxUhdNKtK61NWSukutvogotWUzJN+3I44sX
sGEVePLMUO6xGeQu/ZtJG1Rgu1znneeyDALL/6ZTDJSh0FQp86wrMvvq5YN0
Raik0KarMY1c/vodW1MaZsZlNB2aQWb8XnBMXhqmDdsnXpsl702G9gtJQ171
6JSxOWSLCHznDzq0PCWVncdBdq70Cc6jw6NNxzJZfAoEFjvww3gzHZ4Qfsn2
lSHtrmOkJwW3ZoZluBmRbrqx84gETHzLmnW8gey8ClZxRGG2b/J7rd8Vkaec
bKsEKJ5caSkfo4+MNRTk5wnAX9UzN8cMyDz5ithdAcj43WLdI0Nk9ksw7ycA
DX6dLlDbQ/Z7qveoCsC+zaW3N1mR/dHhlmv8UJLZu+B0AjmVU3rHZTV8z52U
45KAXJ5rIK3OC4syREJWTJK+OWWnzg3PpGwWO1aihPZb2yKC5oG2S0Px0lPk
coWTqUfnQZvV2K2bz8k8YLJ23zzo4ONSflOGjJW8IZTnwWFs4z7tKmTCua/r
7RwY/PPCKqEmMg8WSFKaA3I72v6cGyZtdMCkexYoZQWU3ZVTRv5c1OY+DWyS
rvFvikImavjklSbB190pJedOryP/R3+Q+BeKP74QPGzoh8xewdSmfQF2oNuC
O4DMMdGZsSGwz6ZlTdRZ0tssHtcMgcQwA+67bNJ101X+Q0D61Ye6+mjyvl83
rWsQ+M2qm7g+Ij0x2vtwAGw7oqAXMEj2PbtLfT6BbedvvDE/pIL8YiFBqxfM
zXQ9HHZURXYfSnvaDGLECoo5TqTjGFoZzaAvHlcQP0I6xfzd9WZwtXtAbOdR
0p3Wel7NwFtG3Oe+J2mXX43rmkFamJPomXOkHZhfbzaBL/tgoVsq6eyrq4Qa
gfvurcrHB0knjjso14Ndogt12/zUkJ34my9VA641zUefPFiP3FQSEldC8a1r
wieYWaQXWpj+JYCWc+nLs0ekGV/47UvA9ogcp4p80hZxwgolgFHcubmrlHS+
CvtJMTi2IHhVtpH0T7O290Wg/gUmzjtLOt7tEVEIgo7z9buZqSPfkvh0MB+k
ydvFh82SPmHyfX8mYDvqC5rOk2ZUpOlkgpH2vyWEl0g/PBQkmgni8s70p67Y
gGzsm9r6AKgfTNhb+xtpTCrX+gHosZkt1lxHevbDU+cMYJRR9K+3Fem/QqLj
7oEWr4nEZ7nL/dE+m1Rw3Cz0cLnXRmSt9GjfRJB5bPRSuw/p2PcrLRPBOf9C
x29+pNfUZWskAq2kjdxSQaSb5oJHEsC19B674EjSbEt9twQQIitk6ppK2qKJ
5hwPCuKSOwtbSKf+YXnmOqh43WbhsX0T+b7di8xoIBLjUZIhpIH8ceOb3jBg
5is7dlmcNCPi/u0woLm/28RHlrRzlIlNGGB+oJ8z2bCc531rvgAiPVp+Y+xZ
do99y3nAHpIvPx5KuvyI92gomNAs2OMzSZrgvAk8C4LoqXunPmmS77/QWOtN
sWNlls7un6TZPM5PvcDYg78m2mlaZJ7dk+sJ7jrcErQTI81WbS9yBzedF3Mb
ty5buFTiBGixPfT0DnvZ93pEXYA3c/aezo1lYx/rncHHBjxsOmN5L95B6zDo
tDexXahfdkdViwMgHCfjJembSV9+mLkfxC9aZ23bsex1wy8tQHbicXlx92XT
8FN/gOSaO9FycNkdgVt3gtaB8mwncW3Skt7E76CAIVzG47PsE0J7dYC3Nh7K
T9MlTZxUXwkwpuHfZr1M0myJ8An9//qh7SBXbaceaay5c0H/0jjrs6Cz4bIJ
+iLF/wN61pGk
                   "]]}, {
                  RGBColor[
                  0.5926051666666666, 0.64554475, 0.29019741666666665`], 
                  BSplineCurveBox[CompressedData["
1:eJxlzmk4VWsbwPFlZ6gjybSLjG1FyJQpylpSJJEkypE2FRpkloy7QyQNkoRk
TA4lU6TieVSUsUw7Uo6hEFJISGzvs3x816d1/a7/fd/rkXP2sD5BwzCMlwvD
yK9d8M4IzQGm4ejBhJS8vC74/77iKR6wyLtoeGlz/5Q/8tumb8qvaYL47RhH
S2Pkw9A9KheTwcveinF9yu2CpV8uG9xZVMWbhnJPCyA/Os2vJrpoiB8J27DP
M6cLnuGNW9XCscRFXNuZOve6YE7PabEijiO+rHru0au7XfBghJpfDucs3vp1
+a/+2C54YyaKXsEJxYuqjvFoneuC81u91FQWr+FhxhwTmZ1UX/xhHfEHS8P1
CvSChXs+UCyx38s+TbkQt/wvaaR+OdWMGNxDcXU5fkpK7IeuSSfF7/+8V3Ls
hHh1hBRd8UoHxYGu+oH6m6vxjm92oRJv3lOscpffrkitFhdr49U1EaH6cqDM
4vVbjXjFczzPxYZN8R41j/DYoGZc+VJHb15KO8UP9XRzZK+34gmOTWO6U20U
7z7/ok+1qx3vNNsm5E5QzTxO2522ogNfX1z+/E9yK8Wfq09dkNX/gD+Mqg1v
mGuhONNmsjkw9yNuouw2Om1JtW44p0N8sRsf71diE4XNVFfmzOhY9OKZMThf
JQ/VUZ9rvrWl9eECtNTtFvAtxezrLfFZg/14nuYD3XMxTRQfTn+3MsL2C77V
12nkAN5I8cEMA8GR5wP4MsXf79L+aqBYLqnyvpnVEL5N3bhXq7KO4hUx4Yv5
419xi6hIkRz/Wooj8fNHYy6N4BsHnHcEmbyh+HRbTV+0/Td8w1TPk8X5Gopt
Uz0Snm78jvuWBL65UFdNcaR4m6gmbRyXf2hRQ095RbHHMs8GEfoEbnkyS0ji
4EuK2X3BOq6bJvEd3V/1aPIvKB642HBM4tRP/JNs3w6JEkhxb/d69wEwhafn
5B3frlxJsfHMqd1X1kzjNvYfx9Obn1GsHcP2siiYwd0etaxTMSmnWHHT63UG
+3/j8wrzM8dHSym+sd69V1D0D174u/d1TGYJxaVmfwVNbVnAJQ3cIi5oFFFc
lqE89/3MIs5s7Yb7xvIpflkzqPNahItQlxIN+GWQS7Fk65oxIppGyHIUborw
ZVNc8sI6qkGVmwi4GtSeJ5VBMdFgI9Btwkv0TnP7KBxOprguYXAP485yorlA
MsO+6CbF0t7Wg5n5/ATGYKxzb7tMsfLdRsdAf0GiKi5wlPaERfEP2uCI3YIQ
gX0qW9hC86H4gfzC5xUcIYLFnr44yPGGK83VR56Tnv/inPTHG7Kjx6VkMWEC
i2mQwH55w4S1NMYwDTkW/tMy5A0VQx7fC1kuTBA71bdENHnDYJlnsYUiyOOB
YpuSvOFVfsZRQyVhgnW/vsNTwxvyTuiz5u1Qf1c8MXPCCzqcF5hYW4bu3dMJ
BZUe8Np6+pfYEBECC4g/EClzCqa8515xmhAjWObneGtbmBRXnSZa9hmJEVid
mzfvWybUXif8UGsHsqqo6656JgyeYiVxjJFvhI9Uv2TCCnbjgZumyA/UD9eX
MOHPp7K7qyzRvV7plu+3mHBM+yuueARZqZ0n1Z4Jk1uLvqsHovkQs3uKDUch
YZnqs6kUWdjbIn+ZI+SZnK3+oEonMLm9GuC+PcQehEke11xDYH+58OgV2EDf
9zGaPluQQ7+OgVwbeEshk/mPFnK1WJPJPRs4vnGOO0MHeUTN43CSDfyjWny2
Rx95ZQpxOdwGWv1cW8c0Ru6j/yVxyAYmno0v9LNBTpCvmeCygRYKjbRhf2QJ
3DD00AHoKq6d+KcCOWJv2dhqa1jFe72cy3ItgZWHnnd22Aez9CYz8YviBBbM
+88GeVOK3dVNisIikZ31eUYlTeH9QZ3/YBTynlrxYjFTKGqCxROXka2spnfy
mUKr5QUexteRm7MCQkZM4Nv1TqOWSch6vaFbi0ygqPFJkZB8cl/c7xNuAkuk
fBi675ELG+k1Trvgjqi8I0qbJAiMm17V+cQYrnm2S3Y/G1mdHVWeR8Ae34cO
v3ZLElhtP1tRXRcekayqDt6D3Psx2kJBFwZvtLbl3ousxSnwldaF5jP80yL7
kBt37a9fqQuzh2MVtQ8i743rjhvWgfklT46GOSHHp9cnZulA/a0Xdm0JJP3K
yU9cB+YZ8Z+ReIjsu6fFYaU25M9g/T0pJIXuX7I2XLUFvnmplaE2iBw7FS01
pwo3Ot9q9n4sQ2CJpjpGTxkUL/hZG0WWIXfWHuMrYMB12K3ppHLkAJ5rLfcY
8GJtj+rLCuTdH9u9YhlwmkHrFKtBnpUR6ndlwP0G2mvr2cjjiu6sNQx48tzg
I5cZ5N7lnPzz6yFbuiP5qZQsgVUlYbfN5KDgz2fa548hs/CBMWVpyJBr11Kd
Rpb9lyshhw5zbmQ3H5lB9uQbVkqmw4zhwwlXZ8n9uJGaK3S4XOla2tgc8vgP
rVXedLj/lHhewSIytv7x0DY6PNHskmOwQg7dG35T0SYG3YQqWT6SyOkf8vp5
xKBuTnj2cWNkVueGp0EiMKHJYNbhJjkf6RuQtxrm+aR2qW9bj7qfvPQsH8WT
PPtlrm9HZoYNVw7xwV/VM7fHDJGxCB+XDj4ou81qwwMj5N67dS1lfNDwl3eR
oily+kp5IX8+2KPxLGmzNekfL9WmeeFa7e55RzfkqjCT9/M8sIv7br7zLWRi
22M6gxs+zhYOWTZJ/p9TP9WEwXNpGqIuZQxkHofxwWmg6dxYynmCTKTYFbZP
g3brscTbT5Gx8qmgl9Pg/Qou+foKsu/gaKdOg6OYyj7NV+T+hmdattNgwPMf
PsFmcl5Y+1DtLyC9o91zbpjs/Z7CpVOAketfkSItj97naqRRMAls717l3xyD
jJmtjtb/Dr6apJWFem9AVtrmuv0zxb3PBY4a+SKzNquEqXwGh8AHK25/srP0
s9Z9BvtsW1fHnCe7aqLgXD9ICDfkTmGRfT4z4Ek/WPf6Y23DNdIVtpFa/cB3
Vsns2ANyvi75mG4f0HOS0/cfIHsZvFL5H9C7cLPe4shG5IkchQOdYG6m899h
BwXkYqVjUU3gumhR6aIj6ZSYbLcm0BOPy9GdSDteoO1pAlc+fBHdeYK0yxd+
gSbgIUn3uudOejbRPr4RZIQ7ipwLJf3tUGdOAxjaB0uOp5P+kvaxrw6cNtGV
dx0gHVprnvoa7BKZr9XzVUSW13ok+QJwrW45UXx/E/JD95tviylOvCrkpp1L
ul2N9qQY0PIvDZU/IL1zNDqtGGyNzHd8UUh67e/PnsVAtrRDo/MZ6W2yVaLF
wGVe4IrUO9J7cV6nItDwHKMvnyUdHLqVvxAEua7oO26uhGyl8Nb4AciQORQf
Pku6c+iOZxZgOWwX2POH9G7/ooNZYIR9Z40Qh/Tqt4P6WeBGwbm+9GXKpJmF
PFlA6e9blm9WkWbB5ymZ4JPtbKnaBtJWuknNGcA4+/FvD2vSsW4Zlumg9exE
Qvkj0piWn8Ed4GoedrTqrAqyelRGaRzIcfl2ie1FWlanKzEOhPqVOIz6kl49
rxccB9TvqnCLB5FmbnQzjgNXMz8dCo4iHXv2UtsNECIluOdYOulxWv5cLCi6
kdpR0koaY396fQ28qGu3OrN1M/neZwsq0UD4+pmybEFV5KpAxWssYO4jNRZN
X7KH40EWUDvwwcxLijTLbLsUC2h/lAg1UyaNyf93JAxEnWldJWu61MVHS0IA
a1CmyjVsyS0OyYFgQq3I1GtyaV4p18APBEmkW/7sVyN9uyPoFMUOL3O3mEyR
ZvE0J54EY/cDJtg0ddJXnSvcQIp9osAhUdJYRhHdFdxmLjx6p7vUn9aIHAet
dkeeJLOWuouEnCPw0J7N2nJzybZ+nL9BbyMePp295Jb0hcOg47CZ3XzDkrst
7G0B4TAZv1ZCg7T3SicrEL9wMFdvx5IN1YbMQV6Cqwz99JJVevJNQWpN8jVp
uGTHwU4CtH2pynOka5Im+GJ0QZGsUAWv15JVnOnqwEMTD+OnaZGussviApi2
0R3zbm3SrGCNse3/73/tBrjedOgv3VNdMbv90rjBZwGm0dL+ZYLq/wHJmHaM

                   "]]}, {
                  RGBColor[
                  0.5603443333333334, 0.6177874999999999, 
                   0.31609883333333333`], 
                  BSplineCurveBox[CompressedData["
1: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
                   "]]}, {
                  RGBColor[0.5280835, 0.59003025, 0.34200025], 
                  BSplineCurveBox[CompressedData["
1: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
mJAao/h/BgqMOQ==
                   "]]}, {
                  RGBColor[
                  0.4958226666666667, 0.5622729999999999, 0.3679016666666666], 
                  BSplineCurveBox[CompressedData["
1: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
                   "]]}, {
                  RGBColor[
                  0.4635618333333334, 0.53451575, 0.39380308333333336`], 
                  BSplineCurveBox[CompressedData["
1:eJxl0Xk8VOsfB/DT5HaTJEN22VqtQ0QjzpFSKCFLhFSyZJkkJetEUdlTlmRP
kzViROU5o6sibpfJlm5lidIvYipUMr/nzJ/3/PW83q/P51m+r0flKMP+OAVB
kGVLEIRYnSN3XtAb8zR1fCtu5ejIxv/rpJOyYfxlfNMCZ/k5DegXf3/WeEoR
QysYMqUUaBc8MKEMUULnTN8iNQ5snP3+inEuXxst+ZzwaAV0tb+IjiTfFK3R
s0M59mw8YNnVVd2LNqjY5zKmhi0bZ73zX1O76IH6bj3Ko1izcccLOqGsxSA0
dPJlGhtj4+lzCVKPFqPRb94TeZs12fjCtmAdTX4KqufXYbR3KdkXv9hf+IUU
oD8OatFC79WTLGcX7FqgUYMGW1c/XP4n2WqJKGPT6kb0gdVZ3mH/OpL7fvWp
ewzgqF+edFh83z2Sw33o4XStVjSsuXJx2IhszTwR51qdNvTMDu68UFktyVfC
lfip1ztRWmaniv1qsq10GHFpEV3oVEAl0zGqhuRKI0OWcioXdcraY7lh8i7J
e861DGsP9qDJ/z61ifi7mmRPL8qeAuF+9ETcxh9PWqtIHm09cV6Z/gqtODXI
DWutJLnYgdcVXvYaNd6FURNrK0g2jFvsl+W/Qe8JVUzdqCsnu5k1t3XfEOr3
LlukrbiM5ITRJ59fFgyjJrm1WSty7pDcm9p9rWR8BJ1KUX36pJhFskvhPysv
OL1Hf7rVT4nl3CbZschY7NPDMTS3SStEtriUZJWc5tuWth9QGseA6Z51i2Th
xDh+1fRHtO8P7g6lqyUkx6PnDide+oTa3f+4pD2/mGT/l0+GL7t+Ri/MxvzQ
yyoi2Smfkdm0YQp1c7teoF9USHK87EtJPco0KlQ1ErTOs4BkxtKTHRJSM+jI
qoLYWYc8knuHI7f6bOahXdqrDnUF5JI8drHjmNyJr+hI3T7KGrcckofeqAaO
gW8o8/NUw3PHLJLN507sSZKeRcurR77WhVwn2SCxN3jf3Tm0EbAinfwzSN60
+am8sd0PdEGJlqF4OZ3kdNXAITHJX2jNY33TcydSSWZbroj4tuU3umn+1Uvf
2ESSG4o0fk4F8NGPZtE5K2cSSH78ZHzrU4kl2CUr84w5nQskK3ClJ7HLFKxR
94DYGS6T5LoW+4QObSFsOuLqZPnRCJKxDgfRNxbLsCENw1QlyVCS2zPHrdRy
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
                   "]]}, {
                  RGBColor[0.43130100000000005`, 0.5067585, 0.4197045], 
                  BSplineCurveBox[CompressedData["
1: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
fwOVI5e8
                   "]]}, {
                  RGBColor[
                  0.39904016666666675`, 0.47900125, 0.4456059166666667], 
                  BSplineCurveBox[CompressedData["
1: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
9KyPLugn0F82XZgyHhH1MBW4x4vs/wOQ0AAN
                   "]]}, {
                  RGBColor[
                  0.36677933333333335`, 0.451244, 0.4715073333333333], 
                  BSplineCurveBox[CompressedData["
1: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
d7DmyoTeoIC9AdedjmT/HyyH/28=
                   "]]}, {
                  RGBColor[
                  0.33451850000000005`, 0.42348675, 0.49740874999999996`], 
                  BSplineCurveBox[CompressedData["
1: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
                   
                   "]]}, {
                  RGBColor[
                  0.30225766666666665`, 0.39572949999999996`, 
                   0.5233101666666666], 
                  BSplineCurveBox[CompressedData["
1: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
vH60wY/aixOGn4RcjXnmuJP9f4cZBOk=
                   "]]}, {
                  RGBColor[
                  0.26999683333333335`, 0.36797225, 0.5492115833333333], 
                  BSplineCurveBox[CompressedData["
1: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
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
                   
                   "]]}}}, PlotLabel -> None, ImageSize -> 240, Axes -> True, 
               PlotRange -> All, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], AxesLabel -> {
                 FormBox["t", TraditionalForm], 
                 FormBox["x", TraditionalForm]}, PlotLabel -> FormBox[
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x", "(", "0", ")"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}]}], "}"}], TraditionalForm]], "\"  \"", 
              StyleBox[
               TemplateBox[{"\"(sampling \"", 
                 RowBox[{"x", "(", "0", ")"}], "\" and \"", 
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]", MultilineFunction -> None],
                    "(", "0", ")"}], "\")\""}, "RowDefault"], 
               GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Interactive differential equation solution plots", 
     "scanner" -> "ODE", "id" -> 
     "InteractiveDifferentialEquationSolutionPlots", "position" -> "800", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = True, 
                 CalculateScan`ODEScan`Private`iSQ$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                 False, $CellContext`Y1$$ = 
                 0.7853981633974483, $CellContext`Y2$$ = 0.7853981633974483, 
                 CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                 0.2575795557527179, Typeset`show$$ = True, 
                 Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu",
                  Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
                 "\"untitled\"", Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[$CellContext`Y1$$], 0.7853981633974483, 
                    $CellContext`x[0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[$CellContext`Y2$$], 0.7853981633974483, 
                    Derivative[1][$CellContext`x][0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$], 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}}, {{
                    Hold[CalculateScan`ODEScan`Private`yTS$$], {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`x], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 2 + 1]]]}, {{
                    Hold[CalculateScan`ODEScan`Private`yyTS$$], {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1993499[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
1993499["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}, {0, 2}, {1, 2}}]]}, {{
                    Hold[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$], 
                    0.2575795557527179, 
                    Subscript["t", "max"]}, -1, 1}, {{
                    Hold[CalculateScan`ODEScan`Private`iSQ$$], True, ""}, {
                    True, False}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button["Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[3], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[4], 
                    Manipulate`Place[5]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1993499["`1`\[Hyphen]range", {
                    Style["t", Italic]}], 
                    Manipulate`Place[6], 
                    Row[{
                    Manipulate`Place[7], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1994380$$ = 
                 False, $CellContext`Y1$1994381$$ = 
                 0, $CellContext`Y2$1994382$$ = 0, 
                 CalculateScan`ODEScan`Private`functionOrPhasePlotQ$1994383$$ = 
                 False, CalculateScan`ODEScan`Private`\[CapitalDelta]x$\
1994388$$ = 0, CalculateScan`ODEScan`Private`iSQ$1994389$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = 
                    True, CalculateScan`ODEScan`Private`iSQ$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, $CellContext`Y1$$ = 
                    0.7853981633974483, $CellContext`Y2$$ = 
                    0.7853981633974483, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                    0.2575795557527179}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1994380$\
$, False], 
                    Hold[$CellContext`Y1$$, $CellContext`Y1$1994381$$, 0], 
                    Hold[$CellContext`Y2$$, $CellContext`Y2$1994382$$, 0], 
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$\
1994383$$, False], 
                    Hold[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$1994388$$, 
                    0], 
                    Hold[
                    CalculateScan`ODEScan`Private`iSQ$$, 
                    CalculateScan`ODEScan`Private`iSQ$1994389$$, False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  Module[{}, 
                    CalculateScan`ODEScan`Private`eqs = 
                    Flatten[{{
                    Derivative[2][$CellContext`x][$CellContext`t] == -
                    Derivative[1][$CellContext`x][$CellContext`t]}, {}, 
                    CalculateScan`ODEScan`Private`addInits = Thread[{
                    $CellContext`x[0], 
                    Derivative[1][$CellContext`x][0]} == 
                    Tan[{$CellContext`Y1$$, $CellContext`Y2$$}]]}]; 
                    CalculateScan`ODEScan`Private`sol = Quiet[
                    Check[CalculateScan`ODEScan`Private`nds = Quiet[
                    NDSolve[
                    CalculateScan`ODEScan`Private`eqs, $CellContext`x, \
{$CellContext`t, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}, PrecisionGoal -> ControlActive[4, Automatic], 
                    AccuracyGoal -> ControlActive[4, Automatic], MaxSteps -> 
                    ControlActive[10^4, 5 10^4]], {
                    MessageName[NDSolve, "mxst"], 
                    MessageName[NDSolve, "ndsz"]}], 
                    CalculateScan`ODEScan`Private`failedNDSolve = 
                    Hold[NDSolve][
                    CalculateScan`ODEScan`Private`eqs, $CellContext`x, \
{$CellContext`t, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}]; "$Failed"]]; If[
                    Or[
                    Head[CalculateScan`ODEScan`Private`sol] === NDSolve, 
                    CalculateScan`ODEScan`Private`sol === "$Failed", Chop[
                    Apply[Subtract, 
                    Part[CalculateScan`ODEScan`Private`nds, 1, 1, 2, 1, 1]]] == 
                    0], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
1993499["could not numerically solve the differential equation for the \
specified parameters", 14242], 
                    CalculateScan`ODEScan`Private`xRanges = 
                    Map[Part[#, 1, 2, 1, 1]& , 
                    CalculateScan`ODEScan`Private`nds]; 
                    CalculateScan`ODEScan`Private`xRange = {
                    0, 0 + Sign[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$] Min[
                    Abs[
                    Apply[
                    Subtract, CalculateScan`ODEScan`Private`xRanges, {1}]]]}; 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ = Not[
                    MemberQ[
                    Cases[CalculateScan`ODEScan`Private`nds, 
                    Blank[List], {0, Infinity}], 
                    Blank[Complex], {0, Infinity}]]; 
                    If[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    If[CalculateScan`ODEScan`Private`yTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}]; 
                    If[CalculateScan`ODEScan`Private`IsPurelyRealQ, 
                    CalculateScan`ODEScan`Private`yPlotRe = Plot[
                    Evaluate[
                    ReplaceAll[
                    Map[Derivative[# - 1][$CellContext`x][$CellContext`t]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    CalculateScan`ODEScan`Private`nds]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotStyle -> 
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], AxesLabel -> {
                    RawBoxes[
                    FormBox["t", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`x, 
                    Superscript[$CellContext`x, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe = 
                    Part[
                    FullOptions[
                    CalculateScan`ODEScan`Private`yPlotRe, PlotRange], 2]; 
                    If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
, 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]], 
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]]/
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
] > 1/3], Null, CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]]]; 
                    Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotRe, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe}\
], CalculateScan`ODEScan`Private`yPlotRe], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], Right], 
                    CalculateScan`ODEScan`Private`yPlotReIm = Plot[
                    Evaluate[
                    ReplaceAll[
                    Join[
                    Map[Re[
                    Derivative[# - 1][$CellContext`x][$CellContext`t]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    Map[Im[
                    Derivative[# - 1][$CellContext`x][$CellContext`t]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    CalculateScan`ODEScan`Private`nds]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotRange -> 
                    Automatic, PlotStyle -> Join[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    (
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], AxesLabel -> {
                    RawBoxes[
                    FormBox["t", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`x, 
                    Superscript[$CellContext`x, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm = 
                    Part[
                    FullOptions[
                    CalculateScan`ODEScan`Private`yPlotReIm, PlotRange], 2]; 
                    If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm], 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
, Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
/Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm]] > 1/3], Null, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
]; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotReIm, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm}], CalculateScan`ODEScan`Private`yPlotReIm], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    Join[
                    MapIndexed[Re[
                    Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Im[
                    Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    Join[
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    
                    MapIndexed[(
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], Right]], 
                    If[CalculateScan`ODEScan`Private`yyTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}]; 
                    CalculateScan`ODEScan`Private`yyPPlotRe = ParametricPlot[
                    Evaluate[
                    Map[ReplaceAll[#, CalculateScan`ODEScan`Private`nds]& , 
                    Re[
                    Apply[{
                    Derivative[#][$CellContext`x][$CellContext`t], 
                    Derivative[#2][$CellContext`x][$CellContext`t]}& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], {1}]]]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], AxesLabel -> {
                    Superscript[$CellContext`x, 
                    Row[{"(", 
                    Style["m", Italic], ")"}]], 
                    Superscript[$CellContext`x, 
                    Row[{"(", 
                    Style["n", Italic], ")"}]]}, PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotStyle -> 
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], AspectRatio -> 
                    1/GoldenRatio, PlotRange -> Automatic, 
                    ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    Labeled[CalculateScan`ODEScan`Private`yyPPlotRe, 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[
                    Map[If[CalculateScan`ODEScan`Private`IsPurelyRealQ, 
                    Identity[#], 
                    Re[#]]& , {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}]& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]]], Right]]]],
                   "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> 
                    None}, {{$CellContext`Y1$$, 0.7853981633974483, 
                    $CellContext`x[0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 
                    1}, {{$CellContext`Y2$$, 0.7853981633974483, 
                    Derivative[1][$CellContext`x][0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 2}, {{
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}, ControlPlacement -> 3}, {{
                    CalculateScan`ODEScan`Private`yTS$$, {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`x], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 2 + 1]]], ControlType -> CheckboxBar, 
                    ContinuousAction -> False, ControlPlacement -> 4}, {{
                    CalculateScan`ODEScan`Private`yyTS$$, {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1993499[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
1993499["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}, {0, 2}, {1, 2}}]], 
                    ControlType -> CheckboxBar, ContinuousAction -> False, 
                    ControlPlacement -> 5}, {{
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    0.2575795557527179, 
                    Subscript["t", "max"]}, -1, 1, ControlPlacement -> 6}, {{
                    CalculateScan`ODEScan`Private`iSQ$$, True, ""}, {
                    True, False}, ControlPlacement -> 7}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[3], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[4], 
                    Manipulate`Place[5]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1993499["`1`\[Hyphen]range", {
                    Style["t", Italic]}], 
                    Manipulate`Place[6], 
                    Row[{
                    Manipulate`Place[7], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols :> True, ControlPlacement -> Bottom, 
                    Paneled -> False, AppearanceElements -> {}, 
                    ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVt9v0zAQbim/f8N/gMQz0the+\
oAEdDAmDShJee8tdlIL1w62sw3+efDZTdKsXaWYDtCUPpzqS/\
P57rvvrvfsWEZpv9fr6evWfJCcpLfw9NSakZznshDk3VmuqNZMivQaPrtrTUzNPuXwgxLvu2nNe6nm\
YPz5Fb4PPCk4GPrVMM4Mo3p6oCCfsUTXnrFiJ/\
YnUy4T4Ownfb4zHO7uDYceBmMZgzFUCb3bFjKfKdA07SHQDWvechDf/\
PFJefxUcB7T7wUVCdWPrHeigFgYKYBjPsG3Xm2m7mNiBgQBRS6dJifPUdsLtFFMZBM6z/\
GNi8naaQsMKtOemwclN5sU5MO/jQ9k7GLyHpe0OzsCw8K4YvSdl9U/\
526A59dt4ZU8XU8c5veGI29g2AnVq3S+aF0nz0jVtS76BVeXNV+2GuTFU6b+Xzpi2qyG8bJtGHR+\
bGu8Xnur8Htt4WWOXb8Q90NrPntHCbhuOFSC+yhJwRdRNFMeeIm2T1fn1uEx7lV8x+\
gMqWCFE9k4y35x/fG4Aq83hRhrN92CdEQ9AyKaU+\
sijtt9ljEzmoGCxAIvruuXTTaRdSgBd7avPROE2QHmCdm0PKE5TJfqDiaZffmj4lZyOddkyPuhMDSj\
aqPo72B9lCVXkIkMjCTGC5p6DeawSmoMKlj2gxIkzkEwhGS/7Md98w+XK4FUHShUl/\
IsDlxpzsKT6JcFPqIiM7Pmjh04uoLbFrOJ5Gmtuoil6fK02R7T/SbTjRuaAz2UhNCShA/0blPoNoW/\
uims7MHdmtCtCd2a0K0J3Zrw/64JLmL8V/oN/DG4/g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement["dataformats", {}, {}]}]}], Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Possible Lagrangian", "scanner" -> "ODE", "id" -> 
     "PossibleLagrangian", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"\[ScriptCapitalL]", "(", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  ",", "x", ",", "t"}], ")"}], "\[LongEqual]", 
              RowBox[{
                FractionBox["1", "2"], " ", 
                SuperscriptBox["\[ExponentialE]", "t"], " ", 
                SuperscriptBox[
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]"]}], "2"]}]}], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.176", 
    "parsetiming" -> "0.311", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa42411ei43cag0b92e2e800000e278d7ge3800id5", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "15", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa42421ei43cag0b92e2e800003553f52a0iacdd94&s=15", "version" -> "2.6", 
    "profile" -> "EnterDoQuery:0.,StartWrap:1.17628"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2016, 4, 1, 22, 37, 24.748471`8.146123355306699}, "Line" -> 
    201, "SessionID" -> 17681662601854194333}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "integrate (x''=-x')"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{768., {628., 633.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.668557044874589*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668555724547525*^9, 3.668555726165324*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6685561008839912`*^9, 3.668556112153439*^9}}],

Cell[CellGroupData[{

Cell["derive x(t)=c*e^(-t)", "WolframAlphaLong",
 CellChangeTimes->{{3.668556133103158*^9, 3.6685561752138033`*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "derive x(t)=c*e^(-t)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[x[t] == c/E^t, t]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "t"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"x", "(", "t", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{"c", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "t"}]]}], Identity]}], HoldForm], ")"}]}], 
                 TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 RowBox[{"-", "c"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", "t"}]]}], Identity]}], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"c", "\[LongEqual]", 
              RowBox[{
                RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", "t"]}], " ", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  "(", "t", ")"}]}]}], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FullSimplify[c/E^t + x'[t] == 0]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                RowBox[{"c", " ", 
                  RowBox[{"cosh", "(", "t", ")"}]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  "(", "t", ")"}]}], "\[LongEqual]", 
              TagBox[
               RowBox[{"c", " ", 
                 RowBox[{"sinh", "(", "t", ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Factor[c/E^t + x'[t] == 0]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "t"}]], " ", 
                RowBox[{"(", 
                  RowBox[{"c", "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "t"], " ", 
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "t", 
                    ")"}]}]}], ")"}]}], "\[LongEqual]", "0"}], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {"text" -> "cosh(x) is the hyperbolic cosine function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Cosh.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Cosh", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HyperbolicCosine.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"cosh", "(", "x", ")"}], "\" \"", 
                "\"is the hyperbolic cosine function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {}]}]}], 
       XMLElement[
       "info", {"text" -> "sinh(x) is the hyperbolic sine function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Sinh.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Sinh", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HyperbolicSine.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"sinh", "(", "x", ")"}], "\" \"", 
                "\"is the hyperbolic sine function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {}]}]}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Alternate form assuming c and t are positive", 
     "scanner" -> "Simplification", "id" -> "PositiveAlternateForm", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"FullSimplify[c/E^t + x'[t] == 0, c > 0 && t > 0]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"c", "+", 
                RowBox[{
                  SuperscriptBox["\[ExponentialE]", "t"], " ", 
                  RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "t", 
                    ")"}]}]}], "\[LongEqual]", "0"}], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "D", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.838", 
    "parsetiming" -> "0.615", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa17901bf6gfead1g67a930000217c9e21a0i53cai", "host" -> 
    "http://www4c.wolframalpha.com", "server" -> "9", "related" -> 
    "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa17911bf6gfead1g67a930000411bc8dg2df9b0f9&s=9", "version" -> "2.6", 
    "profile" -> "EnterDoQuery:0.,StartWrap:1.83809"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2016, 4, 1, 22, 22, 58.142245`8.517066770163893}, "Line" -> 
    198, "SessionID" -> 17681662601854194333}, Typeset`showpods$$ = {1, 2, 3},
    Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "derive x(t)=c*e^(-t)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{768., {156., 161.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.6685561781772547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["integrate x''=-x'", "WolframAlphaLong",
 CellChangeTimes->{{3.6686174220803432`*^9, 3.6686174405693073`*^9}, {
  3.668617713709002*^9, 3.668617715642939*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate x''=-x'", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"x''[t] == -x'[t]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox[
                 "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                 "t", ")"}], "\[LongEqual]", 
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]", MultilineFunction -> None],
                    "(", "t", ")"}]}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Autonomous equation", "scanner" -> "ODE", "id" -> 
     "AutonomousEquation", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              RowBox[{
                RowBox[{
                  SuperscriptBox[
                  "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                  "t", ")"}], "\[LongEqual]", 
                RowBox[{"-", 
                  RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "t", 
                    ")"}]}]}], HoldForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Autonomous.html", "text" -> 
           "Autonomous equation"}, {}]}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "ODE classification", "scanner" -> "ODE", "id" -> 
     "ODEClassification", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"second\[Hyphen]order linear ordinary differential equation\"", 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FullSimplify[x''[t] == -x'[t]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                RowBox[{
                  SuperscriptBox[
                  "x", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
                  "t", ")"}], "+", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  "(", "t", ")"}]}], "\[LongEqual]", "0"}], TraditionalForm]],
           "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Differential equation solution", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"DSolve[{x''[t] == -x'[t]}, x[t], t]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"x", "(", "t", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "t"}]]}], "+", 
                SubscriptBox["c", "2"]}]}], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "DifferentialEquationSolution__Step-by-step solution"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Plots of sample individual solutions", "scanner" -> 
     "ODE", "id" -> "PlotsOfSampleIndividualSolutions", "position" -> "600", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxV0GtIEwAQB/A5N8WVE1vOx5rlA3HlSE1pYENLo1oEoowSMSOWlCaTVuGj
bUqGpiOXaQw1MspolOWLOQdmqYgt1zBNdC51tbVmWmpqOKtVH/yPDo7j9+Xu
+AedFqacIRIIhAN/+9/8vxbir6St0usY5fEbvi7mb7q0TQGTpdNz7qFKmCaX
TT9pbYMjlzM8TZ1qWGT76dd9uAcm9ee+z+rqhTt6o9xU9AFYO7Or9EXOK7ii
oKCTVTUE3xS8vb/o0MOslLh2duMwbIkLO1vKHYEnK58l1ZPewTUP1or9O8bg
zMGJDm/5uPPf9JL+kvMGeN7AqtZHGeGGAAY1InzKuX9ALySSZuA2/9D0YqrJ
mYeVc4jP+AAfXecTg5gf4YeKBNflfWZ458nkC7tTLPC6D4HQlP0JvtdfVpbf
ZIXTrHWGLWOfYXvM1Xhf9iycGlPAC5R9ceb/2tojNc3Bum5jc57gK0ztJeab
p77BS0Kzz1jrArwn1mR5XrUId52Y50ZkL8FvapWKl4LvsGudwMbKWIYpud2x
2swVmC0y3eFWrsLnzJrEFtUPeLT+SIuRtgYf1xy7yyizw/W1DVTJ73WYmaSQ
eGh+OfPLk+v6pA5YMlzjsLQTEjacET3EJU+4wGpfwYo7xRV+PD+omxST4OTR
g0U3mG7wI+Yaf2bcHY667OeRQ6bArJDyopGszbDMUT3ZUOgFp1/cOu112xuW
Omb7bqlpMFv01MWtmQ7b8wO1qtQAeLAijJ/M2Q6H013EhddC4EbNXstAHgvm
6SKVO2zRcFBiaLSnlOO8F8wL9jq1H/4DUjRE6Q==
                    "]]}}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    Method -> {}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQDQEf7BlQwCh/lD/KH+UzMAAAzHVQDg==
                    
                    "]]}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
                    PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "1"}]}, {
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "0"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}, {
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxd13c8ld8fAHAre2+uvfdIA6XzMUqUpCINkVWKaCIkuxClZJMipJRSVsgo
JDOyQ0bmvZIt/M7z/fN3/7j39X4953U+n/N8Puc595G0dz/iRENFReWHv4jf
//8k6LKJW5CW93x7ZOgrhX+b/hpiMyJyVkHHsDAjyuwSk7AgCaLpA2dRvrAg
onENl7YgKSDflU6mC8IKKLBYW9OCpI0Oc5z5QSOsjXRn/5yzIO1HXRKHOZYE
96OqHz8MjpCsUTFHbXQFvzXarnwxz5J0HvGmZeYg7vPIS6rutAPJC7Xtnbln
wOSFfE8s8ieS7qBm0/hWl6UwdNfPkuW6SDzimFpgOdkeh7b4D0wzyOSgY+lH
Ox7cyUY89yMHXua/RZYHAkXEGN4ijXkbtqHCIiTL3Wq4Fl2Irk78EyzbX4HO
iNFHlFwpQ3Q1bv3OxVWow0qX5sDFSlRQpUn/gf8LaglyX8w3qUFfB5WDP12s
R/esBayN2GtRuLd3oWL0NxQhSpU3H1+PHji2Pfuz2Yz+fH+0b8fhb0jxyK53
qk9akbSEJ6NlSxMa3SV3PljvO7qurafOk9qCeiNeGyXRdSDB1o8XbCZb0aOM
ldtCBT9QBtO5SlrR78i2rruA634XqjJoF2ZybkdXTwXUBLj2IK9fLxnnMjvQ
TI9iTLNmH3oSFm/V1PgDJQuT2FUUfqJ/OawnDFm7UO+XZncaukFUp/60/4ZW
N3orJHPqNvsQur1Y0WB3uQdp/NY2tiT9QnODpO1fsnrRgTVLGknRYfRnQIGJ
tq4PPY8H2vndI4iz3fyYyWY/Ujpz+Ir6kVHkBKSBWYkBtMZHRZV5YQzdTbOP
5xUbROk1YWFemb9R96MXwbaFg+jE78Qe7h/jyK6810h93xBa3RaEBFQnUWDm
+5wvg0Po6DZvU7HIKSQfaplwwesXomv4XeE/NI0Y8i3M6rcMo8ayvlcejmRU
Kdyuy5E2jNiraLxGflKQazhvsoTaCJpzH+H7kT+LXIoP2diVjCCt7UOj5dF/
UIsztd49nGex9YyeyoU5RKM89tt/cBQ1xebEVzr+RZZBbPSmN8cQbaLjhKLN
PHrnOdFRyvQbMbuVbf9qu4C2KiWIiz3+jVSvDqXoRSwio0zQXFIdRy4jJYZv
Piyh/W4LdqTScdSeZPKmj2cFjWQbX1c+OoGOl5ilkcJWkfF2Fw+93xMoKTaZ
/dbGGjq0Juwy5T6JRI3ibzGVrKNS/ffl3DRTaM3jfmO1/yaKdNghwHNnCt1q
fbQ5+o4KCvgyY+8zTiObrd/0tnRTw0I8jdtq9DQqEnBcYGCmhVuVif4VTDMo
wfyLni32okJB8wC2b1XLnQ/YHi3nxamYZ9Bs3085JxZauNbwrAywl/2GA6tY
aaF11HahEjvNMLfEj4MWxA5OW9SwzKC8EZLSIi8taHVurahjm0G7PnzioIjT
wgjXGZcWrhkkxBCkQb2DFmKFbf72CM2gLTudnmbb00LAnunHfYoz6DpV0gOe
cloolSL1RpvMoNyZusZePzqYhdNVz8JmEJUKL4PeLToYbiv4UomdQn/bMBXb
uDzu6wC2oFbJZzt/OliK+NdCujODDvd8pIzepgMRN/2uh9ieC2I9s0F0oBP3
riXo7gwai7jKxBROBx+ZeV0cImbQlTeHew0e00E3R8IOyegZJJVE9agvjw58
TQ/sins8g1K9Xz57MUgHE8Zhaa6ZM+j+s9OKNfu2QLWLi2tJFY7XvtcnSpQe
muP6LjetzaC997aKL2K/CAq8P47dZHHzi40YPVCC8/Jo/s2goVySuKo4vl4Q
P7EDe/Lci+UGCXoAw/cn0rCfKYiZMcvQA9Mss7TH+gyizr/ve1eJHo6LM5zk
2pxBU+91Nx/spIfnvjutj9CQETUd/VCDBT10vBe518RIRhnzdyNGQ3G86brY
13xkdJLkWV/zlx62FF+h5VYnIwbDG7e05unBUzNDRhnbvUp151PsRPYje42w
Ne9/eee/QA+7h6VCbmCP/czo1l2ih9WL8Rs92Aac0JW/Sg8uuU1dzzTIKPSt
+dOn1AxQemqv0vatZBS+/uNaNAcDwNw+sNpORn4c1q6PlRlAqeGPeswuMvL1
j/Q87cgAjKqeXbPGZJQtumI52MUAw42bksZ2ZHSOxnHSrpsBnoz26Z7FPnjo
VdAQNq03z1EfbCf9vppfPQwgsBIZ8Br7V+q7gNE+BqDKffND4Cwen3RndGqQ
AVx1358dxw6daj7+b5wBrDRDV+84kNHfcKYl5RUG+KEytL3OmYyuczI/+yLE
CJsbB+v2uJHRewFy78wpRvhyUYOG9SYZUb2xdpMbYYT427+WpR+SEddrnRP5
2FXkkcLd2DMH4k13jzKC0JrWDUvs34XNekfGGOFOe+FsKLZtnYbzrXFGmOuw
7J/A3mrLUNE5zQi+7qOPXj8io/Hrjg+jFhjBcVjWT/cxGaXJjHWzMjCBNKla
41ACGXXtr/A8qMQE5FolIbc0Mlqijurru8wExtnpj+7k4nrdEGS6uIUZfj2V
PadVTUaRnwtTl7D1tt+RNcFW4avWCaZnhiMWhsNnsEOoxG+nMDDDOlf16XDs
eMEFsxYmZkiTGTcewlaYsifvYGeGYKaajagaMto8HWHEKMAMr3JSyROfycjQ
+rh1qQIzsO4v70ipI6OjW3zyHQ4yw5ueZ0XrjWSk992mv/IRM5ym23M3pYuM
RCneKr2KLMAmaE06NUNGAhfT9l9VYgGPuwm33bF9n45cYFFmgeenFEeDsEXr
myt3qbBAHvu2ly+xs9K0ipPVWOCMzILmBrZBT2iTrRYLBBVKiqSTyejyVcbH
k7tZQOAb9cUxChn1n1h9xX2YBUyv1f25NIf7q/XE61c3WKD9aEOi5xIZKaG4
AN7PLFCfOMN3jpqCFKXv+Hx3ZoUyy7KHH3kpqHPZ1iP0HCtQHXsk2Yp9xeWs
m855Vii8FZ03in3Hedg/zYUVFvXnPrPzUVDN4F96V1dWmOg5P2mHvRBWm0J/
hRVuaPIxb+GnoBNMBnP6fqzQaaWfcVCAgtyfzlu1PmQFnbw0g24hCvp5p5Dv
WCUr1DbtEx0XoyBuIa6GP6JsYBa9udKrQEG7V5f02vvZwI9NelhoNwV5zB0o
j//JBjXVTHkq2JEVrPttBtjgwWP8ZwfbL63Tc2yQDaT9jjE5YctPZ+5fGWaD
4+X8km+wX6d9ei0xyQYvHu6X3aeH1w+t8TcW2eBnkd7ty3soyLvj9foeDnZY
oLXw/wwUpH4m+rChPju46Zon2O+loJA7xvtlsthhz0vOZY9DOP5mTG/yTQ7I
H5Q53mdLQUoPR8ov+3DAikP52jR25Lbal/t8OYDumkfaOvabToPsWT8OkFUW
GxGzw5ZVEtsbwAFMEWn2Z7FLrNzoZ8M4gFy+Y9sYthjLpSazWA54F5isSDlL
QQm/+10U33BAd/XV0xsOFLQhTIPsxzggKvBXL9d5CpK4t1fgqhInZL0w5GTz
oCCdU1FiZimc8EJDbuyIPwXxc9iuV2E3WfK8P4vNUnn6l3YqJ1x7xx3kgc0o
PFQuk8YJwez7RaKwlW6Rqv494YSozUjDeuybyl/+vMrghJo8Pyd0m4Kyay+t
8L7khA9eE4tKATi/0wJfFko4YV3xnPlmIAUtfZvdSdvNCb/Mmb8nh1KQ1Grb
52P8XGB8hIkx9x4FnbrGO8DxmAsU7fLceZJwfY2ET4Zjn10yChDHZnW40UsX
xwW7O5lilLGtI7X+rGCXXRLLN8Rmjm0+P5LABaLkK6NXseV6Nu6UpHBBfkmd
XDt2bEfF/YuZXHCcX4b1UTIFNTnJ9gwWcIFY2e2zXKkUZLUhpSvUzgUaNFt3
0KRT0KZRdHgdDzeotnOGfHxOQZ96V1NMeLkhkbmxphZbu9+w6Ct2hlMh7Xds
r5Me1I183JAVzu8/gc3TZTDWKsANLPEbF/mzKOjPkOlqH4kbTKluiHlgX3Nv
M1+W5gbrrXRjUtkUZP7wYIvhNm7o0n67GZJDQfk+D+XULbmhf0TyjMFLChpP
6D1pG88NZm6BLQ/zKajN7kDsb+xvTdl7UrFvktQ73RO44emWjdxsbOrxY5dv
J3JD39K24DLsjH3Km+nJ3JDL3qH0GxvFRwWMPeGGZKaBw7pvKWhQKlr2eg43
HAmRohrEHtn5mi2nhBt8VF5NKRRQ0IDJTx/Xfm7YdUR95c0HCjpo8Xb5ggwP
3LlDoU0spSD/zcnqh0U8cOLnq5KWGgqKGGjj0inmgZiOL8Y92P0NEhd+YnsM
kr8PY4vVzOkolvLAMrhOLGI/54uwqijjgeRkESbRzxRk+dE1eKaKB4T2HCe5
YPfWLRZbNPLAxPXDEVRfKMjBP6tG5xcPGI3pJKrU4n7Vd5IOZ+UFLxp3H+96
CsrlojTpOvCCApVd5FgjBQXFmzJMYd//Wa1EwZYcJx1IcuSF6MBddUvYl1xk
FtaceEFS05mKqYmCvr2dbis7zwsRlTlOytihbdYfDC/xwmVfMq0HdlVhooy1
Ny8w88dGL2OXdYgPPIvmBZ7ZByP0LRRkJCDUWfeRF1Ju3YgWbKOgJz2xr08I
8cFC3y3E+QP3c/2LeT5hPghifTovgH0p8OK+Nuz3ewayxbHpgxc4DojwgXht
Frs69hrb4V164nywW/VKsxm2nqrBvLQsH8z6zslGYCtd2rW8qsEHfJQ2uS2d
+H5xisc07+eDrlPPvRex73RJOfJ580FHdJhHUzcFLSYxfZfr44OP6Tqcx/op
yKK4wmMWW91YZvgkNudosEhJPx+k1mq8P4tdetIg1WyAD6R9X1u5Y8e7vzO9
/osPmLPwRsEuuPFxf+04H8Q+6/jxCTu9YWz4+gIffAttrlDB7x0lvDum1tn5
If0D9xr1AAW9z5ueKTXgh8j32XJPByn4fSGPmv4VP/TVMf4oHqYg+/YTpBZs
XQPGCxXYGe65Bol5/PDQ6tB6Dbby1L4StTf8MHg5T7IFW0Mq1Mz6HT9Un6k4
O4bdG2W7Ja+YHzquKVdwj1CQ8yXrGocv/GA+c45yAXvZrKNpeYAfQqks5IVG
KcjFcDKpgUcAWnhE6NzGKKjal/6Pwi0BcPc6Rpkbx8+nNK+L1P4CoBl8tGkJ
u+Uq50I39jXNpy//YVukFm6PCBAAiTi1c/QTFBSzxulGDhaAlyl07ULYM8+s
3xdGCMAnzrxIwO7kjiq0TBAAjSTdm/ewN7XH+isKBEDk65n9spN4/1TqJ5hP
C8AVdZ2qg1MUJBJ4sOnaGUEQ6rEq9ZnB66GV3GtjKwiSO1fJ/tgbY+3f9toJ
woTnkmQw9kX0i13AXhDYWjZDIrEpqrU2JU6CYMJssi8Fe/DFSQU6N0GQkq/N
KscW/lbql+EjCOn7y8lUZApKrJ2KEUwQhLtuG1FB2PFB05Wt7YLAwaitEkCh
oOL7FSNVHYLgEq7MHoKtrHQev34LQlDALcod7Pl1/aLHXYLwZs3gzX3sJ2KH
v53uEwRDO2OlJ9jak4/Np4cFIXTWmKoCWzNpuEXwryAUJ3pt+4f9z0xcI5tL
CI4oiX+6NktBOQG3N56ZC4HC4b9eZ/7g+T6zm6UeFoLJAS5We+zwFp+8eAsh
OFUem+qETdW5mnPvqBAoxzVWumI/+FcX5HVcCKYYNql8sDvc7tZY2AqBl+NV
+zjsIcuvd7ndhUBdazG/GfuqzkBKY5QQGBczhu6Zw/cjtaRNtVkI1nWLBfj+
UtCql9jXD0eFgeW8afTzeQri2C3zteKYMFCJNt3KwVbXv/uzzlIY8sXq3V5i
+4ffNOo9LgxSOrKmb7FjfHZvoT4tDOYSnv/KsM+IHTl92FEY1C5GGndgl9Df
vLxxTRhGito8aRcoSGH9aXn8Y2EwZPY3PIM9/yFM/WuPMNzSok9hW8TnRYr5
y/5eHF+oyIQT26ovf8+fPmHg9f+9wI0dlWaeITggDEc2yw8KYlMzaF89PywM
wxpH5qWwrVfWJFmnhcHRjldZG/tCs32Hw7owGFva7bTHPnQwQdZSggRBE72N
Bdj1MSJcRudIICuQz3hsCZ9/k4F59udJcDzjw3Ur7EOPu+wDXEgwywO/rLHd
aGw4Ky6SQKjpZ7EN9uVpAf9dHiT4JmjmcA7b7vbnV9reJBA7s5x6E7uc/6GD
UQQJovxGip9gN3/jak5/TQJKy9TtKeyAla953iskKJxMvuCzTEHnGZ09ah+I
AN/EPaeQFQrijbl9ZSNGBFwXqGzCsHmO3ova/kgEFkW3HLuL3RwVzpvxWARC
Vj7BPWzrWHfrwCQRyDrKyBeL7U+uqjLMFIGDZ4ayM7APn83Q7ikSATEt0q1q
bNa6dgerQRGw33g6tIk9enwt54GGKDgEfcq4ukpBak7jHD80RaH2orvzdexi
Id8Hwlqi4Kr9Qd4Tu70g8/ez7aKwWcCScxN73dtpsFBXFJiLO58HYFd7F9KP
GolCRO9mVDT2G49adOyEKNSzznLlYtvzvlMLCxSF1PmDo4PY/xYXvPf+EIXt
ylPdxmv4fGi/Ih/fKQryWntcTLAXf16em+wShdNL6sum2EK09EP3e0UhfIrC
ewhb6vhfiZ+DolBBO2xyDHvLvKn6rSlRqFxNT7fDrtO2Tm+nEgNh42FGb2z+
qKCiXmUx2CZxozgb+/5T4c8ngsRgPGaphPYfBd0rC3lbGiwGz6ptSFuwkcjN
CtFQMfgV4+JDj30siUP71x0xWDe8osuE7RfmmOEahee/YlLAjj3Y5u4WliAG
R5lIcULYs0doBtpfi0GKT66QOrb2saNbW/rEwGo2iO8Edl24nOVhbXEQWJOk
ysFWt969PKQjDl6jOuYvsN8qslRf3SUO7yIoKbnYstFTzXF7xOGDxTbdPOzu
FJvaISNxoLySvfQOuzlg91Y/C3GQWfxQXYY9n9Uq2XZBHIbU2eXaiPzQm9KF
FHGYe3u2YQX7qNn4SQFaCfjbJVFotE5BDPV/fSax28egcy/2qYcX3pbRScDh
cwxL+7D3aGTZOtJLgMOWO9tNsJ08i0rfMknA08QTeWbYJq0ifkc5JWD2oFm0
FbZ5v8juTFEJkK6nsJ/HjkIlzuHaEtCZO8YYjn2Taffls+4SUJCYseUr9nGV
h++QhwSE6EmsEebZzcEmdlkCukdNZxuwq3ODt/RekYA/4a+6G7F3lHxltboh
ARPUL7JbiflCFjwP+0nAhlfUzm5s389+PVYREnCA31doHLs8+fmTF1kSkEeX
/Idug4IaY0v6rw1JQG+oNecubFm/DUXbXxKgx3RpgPBMtkW0ybAE6Czq5u3G
fru0PVNsVAI0jqyZ7sE2rzu3UT8uAaZDAgH62Oeq111kZyVAorVpwBhbLuee
AWVDAj5ZZ507hl3V8W+wWUQSMj4mZLhi+6Sy6H87IQllSQuUBGwevtGE6pOS
kK5Qm5yI/bWewlZ6ShKK9KxNkrBT/r4wfmEjCfJQnJ6MfTR3B034WUlwdfAy
T8Nm2JIYd8hFEiKZV1IzsA+yeDlMe0lCW/sV9tfYGjnygT7xkiBy6OPWamzF
4+4N3gmSsHprupnw83hOTa9ESbisOOhag708fMXierIk5ChyP/+MPaS9+7fH
E0kIinzKV4d9cy/3RbdsnE9g4MQ37O+DYQs+RZJgJvvS8Qf2fCOH/GwXHs/J
/HIcO1OQ/HKhWxIS5mJ0J7DrT9keXuuRBH6V4TrCIvPss/T9kmD0q3tkEtv+
q/pD8SGc/xYp4RnswrIxV6sJSei8oXTzD3YoZ9+DnhVJEGMI5VzFFre2qNYj
SQFZ+m0C8yYFVYhrcXjbSkHe+c6ditj1uu/pouykQOP7WC7h/DPXhZ+dlYKZ
9RpxJexu2y/PGx2koLNxhl4Z+9qEiaHMeSnYNzXXpoKtHdRyv9NDCswLO89q
YC+emsm0CpSCKUaPUzux9eic1wszpSBueumTEfbFUw3qHc+lYHNEXnEv9pfd
w0FzWVKwX0npAeGBJIMHqi+kQPt7pt0+bDLref3MPCk4KuOzboxtfO3Rv8RC
KaBM5qgdwO74Ms/4pF4KDvZ7uVtgk0JetHGRpUD3dp+bDfbnPZ3pOylSEKTB
2kDY87P+I5tZKVBI5FI4gz2TP/ErZ04KjjSnDBH2ydypYLQkBaY6ZUfssAMW
naz9qaQh4ou0qgN210dVX04eaZjWmak6j53LnI7StKUhkvH49avYCvzUfjdD
pCE09RBrGHbc+6ThlFBpyPzLZUHY/l73xcowaWgS/hBL+L6J1RBjuDSEM6SL
3cFuXl2yS4iShiPXaNTvEvdngqroU5w09Nv/M4nA7tV9TFZ4IQ3BN7ldorEd
Guoa7Zqlgdfvj1kc9qnHpG+RLdLQl7ozgnDJy5iZolZpeM58to6wchh9Ile7
NMyP2RjEY3u0v02o6ZIG6Uqq7QnYSa8e6Gj+kobtrn95k7BF3x6Tl13A8/9o
rkjFDnm9S9ybJAP3D9yszsSmc7MTzBORgWr9nyuETTr1dwyLyoDML3mN50T+
VJaDZhIyELbPNZnwAdnrZBlZGRBKL7maRfRTq9Nyt5oMmL+5LpqDXUab+cfW
QAYMbDJtXmKv7Kn92+ciAy9Pjca8xa6NkrbNKpGBjTPHB8uwacr7oymlMlAV
8ZK5HPtVUtv4zjIZaKib2kaYwhPOU18hA1qxCncJy+lQmc3UyEDm2WSNCuzz
zg+s9JpxvgLXfD5hN/aNL68Ny8AXCTHqauytp9NlF9hkQUVSsamW6LfOrCfG
HLLQ4mH4l/Duj217Ezll4W6fiWAddo3Ve3bgkYXf8iR7wi2OEUn3BGUh5WLL
POH4FbdsDWlZ+Hc3kv8rsd9i2Gsfa8uCaUPAgW/YH3de+TniIAslU+x+LUQ9
9BilDJxkIdzMLYWw6N+GB2nOsqD2obiM8EWujYWTLrLwpFhkg/AUz0rr90uy
EG/NequVyG/9zUCjtywcd42/2YatZNpybzhaFqp2xzm3Ywu+B6G4j7JAzq1h
6SLqmduXu1kmCxUyP+UJtxW1up6vkAWPK78NCTutTHrrVslCRHa9D+Gi5I7K
wVpZ4DZqnCS8L8Cdc8d3Wdh+vPNzN3als8U47aQs8KXLe/RiszZ4h6kJykHr
Pe24n0R/XL+y/FRIDmwe+r0mLJ3AmyhAkoMqyYJawleifdypxeRA9+/CEmHK
q0GHTmk50BRvPD6AzRN31SdSXQ6+7GvmHST2R86THJIxvl5pHjyELe77XrHl
hhxoyz/VHcHOeU7FbeElB/v9fcwJd1e7qbZ5y4H8nLEj4c9FP9bbfeXgFpTc
I9xnRUPfHygHzgpbBglXvqv4uBglB9HOOoGj2GKnz7BaZMnB+2N7y8aI519d
acCzLjm4N6rFMYH99PKnYM0evL4HNJKEa3giyip65UC4+fNWwpnrKS19P+VA
SkDJijC/5Iyf0KgcJHtdSCbct7VlI/mPHGxcb5abJOJFGv7+xiwP3xwttKaw
L8kU1LfpyYMyvbPKDPZG1NbHl5A8GGUG7yJca2WaxKwvDx2aCaaEu5uumRsa
yQOPQsZ5wm1f1+0KTeXhgZBBBuGpcVWtF8flYT7qqRCZWO82qd8ll+WB86TQ
OmHmaEnNiOfyYBC7kDWLrfZHK3B7tjyE7yksIKz1Yox9MEcedHk8KgnzHLbt
3f5KHkYsansIq95c1x95Jw+uOaxsf7Af2K4cPlgpD4qji+6Em6JZmk365KH3
7AX1OeyeVEeJdW4FeGLQFPsXm/52UvkHXgVQ3u//hDDnYn6SB78CzCUr5BIe
9X3HPSqkAGF7HT8Rtu8IXGiRUIB7LLcnCTucUkssUFMAR2UzvXmi3g32Fbmm
CrDD4VQ/4cC0uKDTQQoQH6POuIht6L19n1yIAjRe4OMifCpF/cBsqAJoJc4L
EbZ9fkUkJFwBDNjTlAnrf6/vz3+gANzFGYcIW+j6jAs8UYCGgBsPCds4VQTz
lylAZ/chwSViv1sXiQ4tKUB6XibHMnH+RHJOl64owA/LTX7CkdQhVHFrCtBn
eFSMsN8y1T+zTQXwpplUISwhtLqngl4RYly/mxCOOp1N85pPEfJpEwIJq1tk
UKq1FEHciWGW8JOSnaNfPBThuKRq6Qp22rMsmv4ripC8r6CS8D8WDc+/1xTh
Xd72OsJa3wacJL0VweW4fAfhu6+4TwcEKAKPzxcy4TqRxHKLGEXYGboksfrf
/HvntxUogrs0BBAO480Ts/qgCKkmAmGEr9GMP/UsUoRq9YlIwllPFItLPyqC
xAG/eMJVr4+J7/+sCBwK514T1sseH738QxHEaoz6CGsvBa8yrShCxBn9rWvY
QlcbwnesKYJSsedOwg3zxZ4O64pgZ5Kzm7BOx9S5cmolKBTc2Ef49iG1DC9m
JXjfcekUYfOO9CcbJCW42ukeRFhT+9YhC6QEO+kZW/4b/9Swij9MCYa0D5z+
h+14Vkf71F0liEt1sSNcffMX55MIJbjMFuxI2DX/3aTSfTye+5UrYclKfsO9
CUoQxt3iS/j3eYmUyFwl0I86nUyY/iTfC+cWfN09o4vwJ0fq7MI2JXBqM+kj
bCPSzcLUoQRjKVMDhDn/FGx51a0EJ2/K/CYsV0v9eeWXEoQkXFwgrNCtdPf5
ghLIT1twrRP7n+v6sBlJGTKNY/YRtj4b1ZYrqgx/VL+aEOaepSgxSyiDY8fG
QcJc31cE6mSUwebKmaOElWlUx/arKUOr2pIt4SE4evGMvjLIbtz3IizOm9/X
fU4Z+pm9sggLs88mC35QBpHgtH+Ev0+NfXxQpAwxBaRNwiHix8xYSpUhySiW
egM7/TXTp80KZQiMvE1PeGevyuxMvTKIre3kJKy53Bo70K8MbKYq0oS5K2q/
CdKrgDinrjHh+M47O54wqoCLv7MJYSu9x7wKLCqg/uj+AcIyj3nUdDhVIOhD
vzlhkQDmHjthFdgmeNqa8M3yVM0vaipgLzR1nnBwgkvFxHEVEBK2u0P4iFpR
Ar+NCnjyKUQSvrFUa7nXXgVU835HE672NvHMdlWB7/Nmcf/Fe93mGxKgAqf9
izIJGzhf9k3KVYGf97grCccIO3zdQ60KXMV75ghLPhKczKFXhfUE/gXCqc3r
bAKsqjDa93uJcM6jXuclflX4U3pjnTD/8GvfFhVVsNU3ZtzEfmw+pjNqrQoB
O8pFCJ9ob5e9fEYVnrBtFSes+8JZYdNBFRSZn0gSlv2sfkPSXRVs0i/IEdY0
e2HpH6IKb0NK1QlfVGzWTH+rCt/HLPUJv0v7KmBepAp3rC4bEtb59kl+s0wV
EpPD9v4X7/HDr071qsDxI8OEMNmiZo/ZoCqkSD2zILyHhv5fCLsasHIX2RFW
1TpwVUlYDR70HnIkzBTWPt4pqwZHX34/R5iFJWbZTE8NVh9kXyJ8dcDue5ar
GnB7hvkQ9irddIz1UoPZ8Me3CG81O2gaGawGTWOxAYR7+Id3PU5Wg3uRzmGE
w2KD5kiNahAgcjzmv/lexlpbdquB5RTlEWFzeXrX+FE1eMbjE0fYNlqtfteG
Gqydckkm7JzY/2xZXR18VnIzCW9byyi9vVsdpr71ZxEWXWIY4DZRB54PtC8I
a7MoelvaqwNnkkoe4fkfP49YxqqDu8Pye8Jz3N0neF6rQ9e91GLCWjpph9bq
1OHeFZEywofP+qearqvD2deZ1f/V60O+UzeLBsj/fveFsMiObiNpIQ14k5ZW
T7jUO3nHipYGFPjyNv9Xz6NZhSH6GkBZTmslfL/iwE8Fcw3gf8XW/l8/8JtS
F1zQgHPoURdhZsq6R3KoBlidzu8jnJ+1k2XkqQbwTbsNEjbenlwSWaEBypWt
w4QHpXg94/s0YLJheOy/fhBE+5hWNSDi3IsJwi3i07uGBDTB5rnyNGGX349v
Su3QBLk4NzJhDZ1JreZjmhBKfWOWcPRTK5VrDzXhGBX5L+HrwwuLv75rQnrC
h0XCycfg+6WTWyFQ4s0qYdNGjRyJia2w4Cm7TljSUGYrm782kIy0qaioZpGq
lKkUh50+3N6m+5//B5bn504=
                    "]]}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["t", TraditionalForm], 
                    FormBox["x", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    Method -> {}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    GraphicsBox[{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxV1Hs01GkYB/BZ7cZEOEZYd8mmC4o41u2rSEohuWXJxBIKm81yrEqXbSqk
RFGtS5rQRiFJklxyW5eRIRbNMK4zxk9yyS372/7b95znvOdznuf55znneTR8
Qp38RCgUigsZ//3/f5NoSrKKXq/02aLxuurj4BUCE9nPOniKYnDr2ynX+4XA
7+IbsyVkZaDsoM3qJj1udxQFigpwy9FP3ETWx59uPOChoQrP4QcvBsi8nOv+
yU+09ZCmZfntID3aNJGoK68FpoAjnF4mED3/nhqkqA3m83RnYzLPChpl/qWy
BX3jLtvsST/lMPL46ro4F7Z/RYW0mATtlkziNiTfi3onJPtZJd/fyKPpQ8Y7
M7ec9Odta21tkg0guXz+YjxpLlutrFfOEM1iPB8v0o5SRzpFFI3hYmGwaXmJ
QJe6o9Scgi3edKeeWJonUCpVl1Ah5w76j6oF858IyKYzcyETgMpovyZihMC7
3cL4XdRIlC9MxE21Emjdl9IWOMcAX3fmuXIGASnBjLgH+zZerab0eO4k4Jx5
qOPG5RzkN8ZLR0RMwMXuvLKqaCF0Puo7KFcIoSXTZrWYUILtgvoXFEkhjqiu
jn0ZVo6Nl94SOQfH0eFqImJ3vBJpWttrtjIFYF0InS3YWwOKrkHkTSEf8e7y
7taSdaBy7MZCzPiIVaHkT6c0IGw25H1V6hg+tifZGDk2wT9MOXxKMApN9Qgx
F1YLqnjcGr7dKMKNzfVoaSx4zNwLn306AoW2V0Fe/DZkqJrGtq0ZwQPqscpV
Ku1wnD9qfObkMKp2sRWp/mz4D3f9sdg0hMiBx2JTzA7UWQ1LieoMIYOR4trS
3In8q91DCqmDWMqVOGwl0QVDnybfD/M81Ovd7/vNoBsl02cyrP15iJmt+Jt+
8h+EWGrmONQNYIqrZFib3YOYDKNp5a0D+MjRpq6q70VgnEXUl7v9kGY7OO9d
6YO0eofXT5R++FkqcSbVORB9EspghHJxJd0nRVaVi4XIuK7Oag66kx5d9C7h
wsTzyoTljQ+gv+6x1rPpR69wLDrz1z6cZxbn1nL7wS5evBlm0UvO3SU1KHIA
7gXTlZuleiBacPBAw3c81AW8swme7kalIttEKp2HH5JG/fsru3Diquw9dd1B
LOTpZ77Oeo/AUnsv+stBCLQ1ly1iO8Hy/8Y83mkIrgU/ew55dEBky/DIWe4Q
zrI/16xYsOFyYe3qfVHDkHdeV3tcvB1FEWMdZdQRhN2qYDHG26C/OVVN9dYI
+EvL16rbWbBmWm6f0xlFlE/xrvW2rbANnqErlY0ivqhKJZHWjMGcPeFbDo1h
bcUdd6eiRuwxDPzFfGQMRvRTBNW3HvaLioGCUD5mfdcYOFnWomxn8WsZEQEw
79P8bK4acb5G8rTLAvjUUG2KOJV4to6ZfF1sHIwMU+2osgrMpIgELySMQ+/N
G4WtMWU4U3nnbAVViGRD5ZJVhSWYtPSsymIIEfD4bXV/VRFab/eebFkUgh3F
D4nTeApe84rGHvoETkf6WV9bzMXAfa1jBtUTCP9UXtDQlIVyl/Kbr2QJnNsA
tZCAP1HA3eDW603AzSyt8NS3SdhEzw+l3SVQ5zUdvcH0Cg5/yHvJqiGgbpZd
n3n7NHrrxTpLeQSOmtrTtW1OQDxgX8LDaQJrMqKC+wpdIb+oQckl9/5hlkHE
QokJLqXZSzDIuyVmqvnki5kk3DR0yuZJH+9XY3FkGyxmIrSWV0i/MJSnwcHE
Qsna+OudVHMwNtztXWoes8Pkq3UutzxqLtlh/i/JGaf3
                    "]]}}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
                    True, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
                    PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}], "}"}], TraditionalForm], 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}}], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"x", "(", "0", ")"}], "\[LongEqual]", "0"}]}, {
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}], "\[LongEqual]", "1"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {None, 
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
                   None}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}], "Column"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Sample solution family", "scanner" -> "ODE", "id" -> 
     "SampleSolutionFamily", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                AbsoluteThickness[1], {{
                  RGBColor[0.624866, 0.673302, 0.264296], 
                  BSplineCurveBox[CompressedData["
1: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
+iLF/wN61pGk
                   "]]}, {
                  RGBColor[
                  0.5926051666666666, 0.64554475, 0.29019741666666665`], 
                  BSplineCurveBox[CompressedData["
1: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

                   "]]}, {
                  RGBColor[
                  0.5603443333333334, 0.6177874999999999, 
                   0.31609883333333333`], 
                  BSplineCurveBox[CompressedData["
1:eJxl0Xk4VVsfB/Dt5HaTJENmHUODzE5EXPZGKZQOoRJSiUQkKXMnisqcTMlU
ScZIlMpaR8l8y3RQXdJA9EacukjiXfv8efdf6/k83+8afs9SPOxnd5SGYdhS
Pgwj171hWy8wht1MHAZFrBwcOPC/jjspHbS4dNEkd6/sjBryy7+/qjXShPES
P6kCGvJ+eCKmCKPjMyaDWIU9B1Z/umKUtaiJ3/oa83Q5crm3oJb4oglewbDF
2XYc6LP06srOBRtc+GsRS43JgYXvvFdXLrjixzYf5tKsOdDhglZg4YIvHjje
nVRNcGDyTIzE04UI/IfHWPZGdQ6c3+Kvpb6YgDO82gx2LqH64je7C7+wXPzn
Pg3twPs9FMvY+jvlqlXg/tblT5b9SbVyLO6nsuoR/tjqLPegdzfFvb96VV37
Ie6VLRkU3dtFcYinYYihRgMeVFe68N6AavVswb2VWs34GbOuWf6iToqvhNAX
E1Pbce20dkW7VVRbaflFJYV24BM+pSyH8A6KSw30CxUSu3DH9B2W68dfUbwj
uP695psePP6fRpvQv19S7OZO25Er0Icfj9rw80XD3xR/bDh+XsHwNV5y6k1X
UEM7xTftuR0hRW9xo22EaGxlG8X6UQt90osD+H3+konrVa1U1xXObN41hHu9
yxBsvtlCcczHF1+7c9/jxlmV6cszmynmJHZeuzXyAZ9IUGp8cbOJ4v15r1Zc
cPyEzzk/mBDObKTYId9I+MuTYTyrViNA+uYLihUz6+5YMj/j2mw9lkt6A8UC
sVGLZZOjeO8fXWb0q88pjsaDD8Ze+oLbPhzla8l5RrF394v3l52+4hemz/1k
pNdT7Jjjl1a7fgJ3dk7N1c1nUxwt3S3OoE3i/GUffNe6QYr9lpxsE5OYwj+s
zI2ctq+jmPM+bLPnRi7eobnyQIfPE4qHL7YdkTn+Hf9QtYu22rmW4qEBpRPD
4AfO+jpR0+rwkGLzmeM74iSn8eLyD9+rAqop1ovl+O+6N4M/AoVhjt5VFKts
bJQ1sv2Jz9O1U+QvV1KcrHRiSFj8F17xTNck+Pg9iqstl4f+2PQbV5l93X0s
soTimny1uQmfRXzUNCJzxVQhxc9ejGxuFOMjLlmZp8xo3aZYrktynLhMIx7p
7BE+05VHcVW9XUybJj8xGXp1vPhwFsVEm73QgMVSYkhNP5EunkpxS9qIlXLW
MoKQPpSlGplI8ZpTdiM3ywQJt8jID5OBFylWy253DTkjTLAfuoh6gxCKv9FG
vuz9LUKwUta2fPXypbhk7e+PAgsiBPbtisBtd1+4wlr7yxNklptv54GDvpBz
eVJeARMlWCKlM+32vjBNiqY8RkPeuZhdjftClfAHt8OXIXeP2Oat9oVh9MdJ
FWLIrGSHt/UnYLyg8kETVVECu10MP8uegEunDFnze5HvP4zc3+sNnYOFpqRq
UD9q1j3D3QsmKEl8SgoXI1g/i4T/GHGHN3r5BbyJ1QQWvG85MeZEMdub6Nxt
ivz2TZTxRyeoJytaqmuGbKnQbzTgBMN+sDIXzJHPd60y6nSCTznte1K2Iwd9
rjevdYLfaxV2sG2Qs9xlIy47wXG9UVzFBXmg1i9N1Qle76qc0A5B1smv2eO3
HxI2OQEbq5Hv1i+fou2Df3BnG15rShDYA4F6HTsHiJWck3NnSBKY35pO9Tgm
PN0bywjYhNwWPdUWw4SpG266ReoiZ2/t845iwsn1c/z5m5GfxHHLQpjwl+Z9
33eGyMYfPYy8mJD5XarFzRz5/DajUAsmzPC9VhFojxzE1E/gY8JdG9ppY2eQ
p921f3+3gZ7Sehm/niIbbq/78HknZC9NfMRnI0Vgcwsa1RKW8JYB9yZ+UZrA
5jt1baPMKD6hbVF5Lho58lfHpXAzeGdk8yCMQe7ZUl5/1gyKW2DXiCvIpwLU
9H3MIHPZPT/zROQ3uzV0HMzgS6VD/7PJRJ7byTi0AfXNvcTCy5B7y1wq2k1h
lXyAsn4vspOxKL+sKTSLKXZR3ShDYAbKWEIcDiUfb1Ow5SBLObxmFxvCd6dL
nf/dIUdgeaNnx+MY0EWO3RBmhfwgLL/vIgOGrbdz5N+JnLQAn0cwoPWM4LTY
buS/ct7kn2TAgrEkFT0H5NsrIwLtGbCs6uHBc4eQS6uMQuQY0HDL+W2bQpC3
ep2fKdOBxaaCPjKlyA2+hRW92lAwn3WAKyJPYApCF7TDNWHTM918rRHkk0n5
ks0qcP3h1I5TD+gExsTrXibQKf4daGcaXUPadMupCDqUxVKnMx8ha/tJyPnS
4cXmd5rPniJXqE1E7qLDaWVa/+oXZL5p9MYKOrQ10pNq5SBPFpZjcWug19mR
co8Z5I7ClrBEechZ03e9Vl4BzZ94fequLBT+/lgv+Agy5vFwrbIUVFbs0dWc
RmZF65bQRWFhckGHywwyu0vhm7gozB/bnxY/i9zxdkJ/uShcppqQOz5Hnrdf
tf+HCLQ9Ll18b5H0+Wm7VhF4tMOj0EhAEb13PFf7jAg8JlLHCpAjvV0psnMV
1C+MKnA3R2az/Q6oC8O0v41mnVOQhwTsnYqXw+KAnDfafymh/5wZ+6S+hGLu
H7b0RGPSDMU2+hL4b8NM+rgJaS/nR6JLoMJfzHUlpshuET2FszRo8u+pSpXt
pI2j3jTQ4Dudx5kadshD3Kw4VxqU0huYdz2GzF7sFEnng2/4s8sOp5J5y0ZR
OQw+KBANX8JFJlq3Kn6cA2dzdcQ9apRRX//jfjsuYBxur154iMySsGCbc0GP
3XhGei2Z/5zW0uOCXgG+ta1PSb/UUZPigoOY+m7Gc9JfriUNToHhk5F/Cncg
Y3ddxE5MgTVmPSfnxkhHxr9NmgTKRWee3lizFp3/Okt2eBw4ZscLasQiY38K
9WiOglGL3JqIU+uQV2kUNA9SPPRE6KDpadL3LDLKBsE+8JrJf4Y01pBzdRDs
duxaFRtM2po97DwI0qJM+G+wSLvlOHEHgGzj2+a2BNIaU70KA+D0rKrlkRLS
ZsldsW+BwSFFwzPDpJPbb6X3A4PzKa27XNYjb9hTG9gN5mb67445b0BOuBSZ
2wQSxSurF11JS/R+iW4C767hihKHSEd4HvNtAnGvP4lvPUp6jfwt4ybgJyfh
f/sEac3tqwcaQX6Uq9jZCNJK24fojeDzbljlnkdaruregwbgbaG/1nOYtHve
X1LPwDax+WaD0yrIPbUSh54AvlWdR+/f2YgsZWknWU5xRrzIMb0i0kzp7Kky
QCu79PlRCen+QeH2MrAlusy1voI0u97nfBlQqO7T6X9MOmMTNlEKPOaF4uRf
kd5x9OTLEtD2BJNYNku6WTuxpAiEegq8d7dWRQ6i978qAPn0fdeiZkknrUiR
yQUsZ2Mhq1+kOxwjv+WAL5wsSZEF0kNhtxtyQPK9s+/zlqghV2Sy/HKA6oFU
m6aVpLH2q03Z4B/H2WqtdaSZ6/5l3QDmBQ9++tnxXHhM8jro8p1Ke1TO6yep
tqQCT+tzB9m+6shE/7Fv8aDQ4+sljj9pN2WX+ngQEVjl/L/TpBXcElLigXa2
Or90KGn2rTsG8SD+5j/7wmJ4fcnCi3EgXF7Y6kger+9drhoLKpNz+qq6SA+t
ksy9BOpbepg+WzTI/ZoLyheAaKJPTYGwJnl/slB4CLAOkB+/LEGafV9bKQRo
7Xlt6S/Py4UPNwcDvbcyEZZqpFljnySDQYxP10qF7bx+iNLzs4A1Qmd7nuP1
Ta12BIIprcrt/lxebh8zfxKEyuTZfP+gRc5f+k7rKMXOz4o2WfwgzeInQtzB
+J2gKQ5Nm7T/aMsRcMMpQ2ifOM8yCUGHQbrb7/JX+qSxQ53CbqBrr8vD6yye
L4bK7AN+erO3NqXwXKJ61BEMteNR0wU8C31utQd9+y33zrfx/KnvvS0gnLnX
pGR0SNcM6VqBa78digzMeGbE2VmA4jRPuoQ3z47npsxAzovrCWsgz823fhiC
7k/sYlcJBmn3XA4DVCqIPF3qz/OQV91G4MfAzwnSdEkTcQbzdZieaZb1gB5p
rNXps/F/fXfvMF9TnyGvH2v43fjSpNFHITdTnjkeVP8fG7yC6Q==
                   "]]}, {
                  RGBColor[0.5280835, 0.59003025, 0.34200025], 
                  BSplineCurveBox[CompressedData["
1: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
mJAao/h/BgqMOQ==
                   "]]}, {
                  RGBColor[
                  0.4958226666666667, 0.5622729999999999, 0.3679016666666666], 
                  BSplineCurveBox[CompressedData["
1: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
                   "]]}, {
                  RGBColor[
                  0.4635618333333334, 0.53451575, 0.39380308333333336`], 
                  BSplineCurveBox[CompressedData["
1:eJxl0Xk8VOsfB/DT5HaTJEN22VqtQ0QjzpFSKCFLhFSyZJkkJetEUdlTlmRP
kzViROU5o6sibpfJlm5lidIvYipUMr/nzJ/3/PW83q/P51m+r0flKMP+OAVB
kGVLEIRYnSN3XtAb8zR1fCtu5ejIxv/rpJOyYfxlfNMCZ/k5DegXf3/WeEoR
QysYMqUUaBc8MKEMUULnTN8iNQ5snP3+inEuXxst+ZzwaAV0tb+IjiTfFK3R
s0M59mw8YNnVVd2LNqjY5zKmhi0bZ73zX1O76IH6bj3Ko1izcccLOqGsxSA0
dPJlGhtj4+lzCVKPFqPRb94TeZs12fjCtmAdTX4KqufXYbR3KdkXv9hf+IUU
oD8OatFC79WTLGcX7FqgUYMGW1c/XP4n2WqJKGPT6kb0gdVZ3mH/OpL7fvWp
ewzgqF+edFh83z2Sw33o4XStVjSsuXJx2IhszTwR51qdNvTMDu68UFktyVfC
lfip1ztRWmaniv1qsq10GHFpEV3oVEAl0zGqhuRKI0OWcioXdcraY7lh8i7J
e861DGsP9qDJ/z61ifi7mmRPL8qeAuF+9ETcxh9PWqtIHm09cV6Z/gqtODXI
DWutJLnYgdcVXvYaNd6FURNrK0g2jFvsl+W/Qe8JVUzdqCsnu5k1t3XfEOr3
LlukrbiM5ITRJ59fFgyjJrm1WSty7pDcm9p9rWR8BJ1KUX36pJhFskvhPysv
OL1Hf7rVT4nl3CbZschY7NPDMTS3SStEtriUZJWc5tuWth9QGseA6Z51i2Th
xDh+1fRHtO8P7g6lqyUkx6PnDide+oTa3f+4pD2/mGT/l0+GL7t+Ri/MxvzQ
yyoi2Smfkdm0YQp1c7teoF9USHK87EtJPco0KlQ1ErTOs4BkxtKTHRJSM+jI
qoLYWYc8knuHI7f6bOahXdqrDnUF5JI8drHjmNyJr+hI3T7KGrcckofeqAaO
gW8o8/NUw3PHLJLN507sSZKeRcurR77WhVwn2SCxN3jf3Tm0EbAinfwzSN60
+am8sd0PdEGJlqF4OZ3kdNXAITHJX2jNY33TcydSSWZbroj4tuU3umn+1Uvf
2ESSG4o0fk4F8NGPZtE5K2cSSH78ZHzrU4kl2CUr84w5nQskK3ClJ7HLFKxR
94DYGS6T5LoW+4QObSFsOuLqZPnRCJKxDgfRNxbLsCENw1QlyVCS2zPHrdRy
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
                   "]]}, {
                  RGBColor[0.43130100000000005`, 0.5067585, 0.4197045], 
                  BSplineCurveBox[CompressedData["
1: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
fwOVI5e8
                   "]]}, {
                  RGBColor[
                  0.39904016666666675`, 0.47900125, 0.4456059166666667], 
                  BSplineCurveBox[CompressedData["
1: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
9KyPLugn0F82XZgyHhH1MBW4x4vs/wOQ0AAN
                   "]]}, {
                  RGBColor[
                  0.36677933333333335`, 0.451244, 0.4715073333333333], 
                  BSplineCurveBox[CompressedData["
1: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
d7DmyoTeoIC9AdedjmT/HyyH/28=
                   "]]}, {
                  RGBColor[
                  0.33451850000000005`, 0.42348675, 0.49740874999999996`], 
                  BSplineCurveBox[CompressedData["
1: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
                   
                   "]]}, {
                  RGBColor[
                  0.30225766666666665`, 0.39572949999999996`, 
                   0.5233101666666666], 
                  BSplineCurveBox[CompressedData["
1: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
vH60wY/aixOGn4RcjXnmuJP9f4cZBOk=
                   "]]}, {
                  RGBColor[
                  0.26999683333333335`, 0.36797225, 0.5492115833333333], 
                  BSplineCurveBox[CompressedData["
1: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
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
                   
                   "]]}}}, PlotLabel -> None, ImageSize -> 240, Axes -> True, 
               PlotRange -> All, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], AxesLabel -> {
                 FormBox["t", TraditionalForm], 
                 FormBox["x", TraditionalForm]}, PlotLabel -> FormBox[
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x", "(", "0", ")"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    "x", "\[Prime]", MultilineFunction -> None], "(", "0", 
                    ")"}]}], "}"}], TraditionalForm]], "\"  \"", 
              StyleBox[
               TemplateBox[{"\"(sampling \"", 
                 RowBox[{"x", "(", "0", ")"}], "\" and \"", 
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]", MultilineFunction -> None],
                    "(", "0", ")"}], "\")\""}, "RowDefault"], 
               GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Interactive differential equation solution plots", 
     "scanner" -> "ODE", "id" -> 
     "InteractiveDifferentialEquationSolutionPlots", "position" -> "800", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = True, 
                 CalculateScan`ODEScan`Private`iSQ$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                 False, $CellContext`Y1$$ = 
                 0.7853981633974483, $CellContext`Y2$$ = 0.7853981633974483, 
                 CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                 0.2575795557527179, Typeset`show$$ = True, 
                 Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu",
                  Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
                 "\"untitled\"", Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[$CellContext`Y1$$], 0.7853981633974483, 
                    $CellContext`x[0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[$CellContext`Y2$$], 0.7853981633974483, 
                    Derivative[1][$CellContext`x][0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$], 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}}, {{
                    Hold[CalculateScan`ODEScan`Private`yTS$$], {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`x], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 2 + 1]]]}, {{
                    Hold[CalculateScan`ODEScan`Private`yyTS$$], {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
403848[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
403848["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}, {0, 2}, {1, 2}}]]}, {{
                    Hold[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$], 
                    0.2575795557527179, 
                    Subscript["t", "max"]}, -1, 1}, {{
                    Hold[CalculateScan`ODEScan`Private`iSQ$$], True, ""}, {
                    True, False}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button["Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[3], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[4], 
                    Manipulate`Place[5]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
403848["`1`\[Hyphen]range", {
                    Style["t", Italic]}], 
                    Manipulate`Place[6], 
                    Row[{
                    Manipulate`Place[7], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$404729$$ = 
                 False, $CellContext`Y1$404734$$ = 
                 0, $CellContext`Y2$404735$$ = 0, 
                 CalculateScan`ODEScan`Private`functionOrPhasePlotQ$404736$$ = 
                 False, CalculateScan`ODEScan`Private`\[CapitalDelta]x$404737$\
$ = 0, CalculateScan`ODEScan`Private`iSQ$404738$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = 
                    True, CalculateScan`ODEScan`Private`iSQ$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, $CellContext`Y1$$ = 
                    0.7853981633974483, $CellContext`Y2$$ = 
                    0.7853981633974483, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                    0.2575795557527179}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$404729$$\
, False], 
                    Hold[$CellContext`Y1$$, $CellContext`Y1$404734$$, 0], 
                    Hold[$CellContext`Y2$$, $CellContext`Y2$404735$$, 0], 
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$404736$\
$, False], 
                    Hold[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$404737$$, 
                    0], 
                    Hold[
                    CalculateScan`ODEScan`Private`iSQ$$, 
                    CalculateScan`ODEScan`Private`iSQ$404738$$, False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  Module[{}, 
                    CalculateScan`ODEScan`Private`eqs = 
                    Flatten[{{
                    Derivative[2][$CellContext`x][$CellContext`t] == -
                    Derivative[1][$CellContext`x][$CellContext`t]}, {}, 
                    CalculateScan`ODEScan`Private`addInits = Thread[{
                    $CellContext`x[0], 
                    Derivative[1][$CellContext`x][0]} == 
                    Tan[{$CellContext`Y1$$, $CellContext`Y2$$}]]}]; 
                    CalculateScan`ODEScan`Private`sol = Quiet[
                    Check[CalculateScan`ODEScan`Private`nds = Quiet[
                    NDSolve[
                    CalculateScan`ODEScan`Private`eqs, $CellContext`x, \
{$CellContext`t, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}, PrecisionGoal -> ControlActive[4, Automatic], 
                    AccuracyGoal -> ControlActive[4, Automatic], MaxSteps -> 
                    ControlActive[10^4, 5 10^4]], {
                    MessageName[NDSolve, "mxst"], 
                    MessageName[NDSolve, "ndsz"]}], 
                    CalculateScan`ODEScan`Private`failedNDSolve = 
                    Hold[NDSolve][
                    CalculateScan`ODEScan`Private`eqs, $CellContext`x, \
{$CellContext`t, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}]; "$Failed"]]; If[
                    Or[
                    Head[CalculateScan`ODEScan`Private`sol] === NDSolve, 
                    CalculateScan`ODEScan`Private`sol === "$Failed", Chop[
                    Apply[Subtract, 
                    Part[CalculateScan`ODEScan`Private`nds, 1, 1, 2, 1, 1]]] == 
                    0], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
403848["could not numerically solve the differential equation for the \
specified parameters", 14242], 
                    CalculateScan`ODEScan`Private`xRanges = 
                    Map[Part[#, 1, 2, 1, 1]& , 
                    CalculateScan`ODEScan`Private`nds]; 
                    CalculateScan`ODEScan`Private`xRange = {
                    0, 0 + Sign[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$] Min[
                    Abs[
                    Apply[
                    Subtract, CalculateScan`ODEScan`Private`xRanges, {1}]]]}; 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ = Not[
                    MemberQ[
                    Cases[CalculateScan`ODEScan`Private`nds, 
                    Blank[List], {0, Infinity}], 
                    Blank[Complex], {0, Infinity}]]; 
                    If[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    If[CalculateScan`ODEScan`Private`yTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}]; 
                    If[CalculateScan`ODEScan`Private`IsPurelyRealQ, 
                    CalculateScan`ODEScan`Private`yPlotRe = Plot[
                    Evaluate[
                    ReplaceAll[
                    Map[Derivative[# - 1][$CellContext`x][$CellContext`t]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    CalculateScan`ODEScan`Private`nds]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotStyle -> 
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], AxesLabel -> {
                    RawBoxes[
                    FormBox["t", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`x, 
                    Superscript[$CellContext`x, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe = 
                    Part[
                    FullOptions[
                    CalculateScan`ODEScan`Private`yPlotRe, PlotRange], 2]; 
                    If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
, 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]], 
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]]/
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
] > 1/3], Null, CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe]]]; 
                    Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotRe, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe}\
], CalculateScan`ODEScan`Private`yPlotRe], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], Right], 
                    CalculateScan`ODEScan`Private`yPlotReIm = Plot[
                    Evaluate[
                    ReplaceAll[
                    Join[
                    Map[Re[
                    Derivative[# - 1][$CellContext`x][$CellContext`t]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    Map[Im[
                    Derivative[# - 1][$CellContext`x][$CellContext`t]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    CalculateScan`ODEScan`Private`nds]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotRange -> 
                    Automatic, PlotStyle -> Join[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    (
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], AxesLabel -> {
                    RawBoxes[
                    FormBox["t", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`x, 
                    Superscript[$CellContext`x, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm = 
                    Part[
                    FullOptions[
                    CalculateScan`ODEScan`Private`yPlotReIm, PlotRange], 2]; 
                    If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm], 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
, Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
/Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm]] > 1/3], Null, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm]]\
]; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotReIm, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm}], CalculateScan`ODEScan`Private`yPlotReIm], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    Join[
                    MapIndexed[Re[
                    Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Im[
                    Derivative[# - 1][$CellContext`x][
                    RawBoxes[
                    FormBox["t", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    Join[
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    
                    MapIndexed[(
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], Right]], 
                    If[CalculateScan`ODEScan`Private`yyTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}]; 
                    CalculateScan`ODEScan`Private`yyPPlotRe = ParametricPlot[
                    Evaluate[
                    Map[ReplaceAll[#, CalculateScan`ODEScan`Private`nds]& , 
                    Re[
                    Apply[{
                    Derivative[#][$CellContext`x][$CellContext`t], 
                    Derivative[#2][$CellContext`x][$CellContext`t]}& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], {1}]]]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`t, 
                    CalculateScan`ODEScan`Private`xRange}]], AxesLabel -> {
                    Superscript[$CellContext`x, 
                    Row[{"(", 
                    Style["m", Italic], ")"}]], 
                    Superscript[$CellContext`x, 
                    Row[{"(", 
                    Style["n", Italic], ")"}]]}, PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits], PlotStyle -> 
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], AspectRatio -> 
                    1/GoldenRatio, PlotRange -> Automatic, 
                    ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    Labeled[CalculateScan`ODEScan`Private`yyPPlotRe, 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[
                    Map[If[CalculateScan`ODEScan`Private`IsPurelyRealQ, 
                    Identity[#], 
                    Re[#]]& , {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}]& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Part[{{0, 1}, {0, 2}, {1, 2}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]]], Right]]]],
                   "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> 
                    None}, {{$CellContext`Y1$$, 0.7853981633974483, 
                    $CellContext`x[0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 
                    1}, {{$CellContext`Y2$$, 0.7853981633974483, 
                    Derivative[1][$CellContext`x][0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 2}, {{
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}, ControlPlacement -> 3}, {{
                    CalculateScan`ODEScan`Private`yTS$$, {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`x], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 2 + 1]]], ControlType -> CheckboxBar, 
                    ContinuousAction -> False, ControlPlacement -> 4}, {{
                    CalculateScan`ODEScan`Private`yyTS$$, {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
403848[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
403848["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`x], 
                    Derivative[
                    Part[#, 2]][$CellContext`x]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}, {0, 2}, {1, 2}}]], 
                    ControlType -> CheckboxBar, ContinuousAction -> False, 
                    ControlPlacement -> 5}, {{
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    0.2575795557527179, 
                    Subscript["t", "max"]}, -1, 1, ControlPlacement -> 6}, {{
                    CalculateScan`ODEScan`Private`iSQ$$, True, ""}, {
                    True, False}, ControlPlacement -> 7}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[3], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[4], 
                    Manipulate`Place[5]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
403848["`1`\[Hyphen]range", {
                    Style["t", Italic]}], 
                    Manipulate`Place[6], 
                    Row[{
                    Manipulate`Place[7], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols :> True, ControlPlacement -> Bottom, 
                    Paneled -> False, AppearanceElements -> {}, 
                    ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVt9v0zAQbim/f8N/\
gMQzAtaHPSAhtsGYNKAk5b1efEktXDuznW3wz4PPbpJm7SrFdICm9OFUX5rPd999d71nRzJK+\
71eT1+35qPkNL2Fp6fW7MpZLgtB35/lCrRmUqTX8Nlda2Iwe8DJD6Ded9OaD1LNiPHnN/g+\
4UnBiYFvhnFmGOjJviL5lCW69owUO7E/mXCZEM5+wvPhy63t4bZHwVBGxBhQQm+\
1RcynimhIewh0w5odTsR3f3xSHj8XnMdwXIBIQD+\
y3rEi1MJIQTimE3zrlSbqPuZliKBE0UtnyYlzp+0F2igmsjHMcnzjQq5etcUlKtOemgclNev046O/\
jQ9k7ELyHpezOzv+wsK4WuydF9U/p26A57dt4ZU8XckbpveOI23EsBPQy2y+\
aF0lT0jVsi74OVWXNFs2GuPFE6b+Rzpk2iyH8bptGDA7shVerbxl+GFbeJljy8+l/\
dCaL95RAq6aDJXcPkla8HkUzZQHXqDt09W5dXiMexXfMTpDKljhRDbOsltcdzyuwOsdIcbaTTYgHVF\
PgAhysC7quN1jGTO7U6JIYoHn1/\
XLHhvLOpSAO9vXngnK7PjyhKxbm9AcpAt1JyaZfv2j4lZyOddkyPuBMJCBWiv6O1gfZckVdCwDI4nx\
gqZegzmskhoRFSz7QQkS50QwhGS/7Md98w8XK4FU7StUl/\
IsDlxpzsKT6JcFPgSRmWlzuw4cXcFti9lE8rRWXcTSdHHabI7pfpPpxg3NgR5KQmhJwgd6tyd0e8Jf\
3BOWduBuSeiWhG5J6JaEbkn4f5cEFzH+K/0GNQK27g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement["dataformats", {}, {}]}]}], Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Possible Lagrangian", "scanner" -> "ODE", "id" -> 
     "PossibleLagrangian", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"\[ScriptCapitalL]", "(", 
                RowBox[{
                  SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
                  ",", "x", ",", "t"}], ")"}], "\[LongEqual]", 
              RowBox[{
                FractionBox["1", "2"], " ", 
                SuperscriptBox["\[ExponentialE]", "t"], " ", 
                SuperscriptBox[
                 RowBox[{
                   SuperscriptBox["x", "\[Prime]"]}], "2"]}]}], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.216", 
    "parsetiming" -> "0.342", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa347238e8gh95ag4hfda000062c77c7a17ie6i53", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "39", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa348238e8gh95ag4hfda00002e6c365g4d6d59cg&s=39", "version" -> "2.6", 
    "profile" -> "EnterDoQuery:0.,StartWrap:1.21647"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2016, 4, 2, 15, 28, 37.626033`8.32806341112624}, "Line" -> 203,
     "SessionID" -> 17681662601854194333}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "integrate x''=-x'"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{768., {628., 633.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.668617717745244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"u", ",", "w"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"u", "+", 
     RowBox[{"\[Epsilon]", " ", "w"}]}], ")"}], "3"], "]"}]}], "Input",
 CellChangeTimes->{{3.668622322956958*^9, 3.6686223406721*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["u", "3"], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["u", "2"], " ", "w", " ", "\[Epsilon]"}], "+", 
  RowBox[{"3", " ", "u", " ", 
   SuperscriptBox["w", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["w", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}]}]], "Output",
 CellChangeTimes->{3.66862234098215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", "t"}], "-", "v"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"%", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.668870046827848*^9, 3.668870106625751*^9}, {
  3.668870383433599*^9, 3.668870637589335*^9}, {3.6688708304318447`*^9, 
  3.668870911501935*^9}, {3.668871132303061*^9, 3.6688711324065027`*^9}, {
  3.6688711724468946`*^9, 3.668871187718973*^9}, {3.66887126338634*^9, 
  3.668871274201583*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SuperscriptBox["t", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g", " ", "t"}], "-", 
       RowBox[{"3", " ", "v"}]}], ")"}], " ", "x"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.6688700897034616`*^9, 3.668870106949958*^9}, {
   3.6688704271919003`*^9, 3.668870533278576*^9}, {3.668870566576809*^9, 
   3.6688706379553947`*^9}, {3.668870830773925*^9, 3.668870911710952*^9}, {
   3.668871183235778*^9, 3.6688711880020857`*^9}, 3.668871274392446*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], " ", "g", " ", 
      SuperscriptBox["t", "2"], " ", "x"}], "+", 
     RowBox[{
      FractionBox["1", "3"], " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", "t"}], "-", 
        RowBox[{"3", " ", "v"}]}], ")"}], " ", "x"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6688700897034616`*^9, 3.668870106949958*^9}, {
   3.6688704271919003`*^9, 3.668870533278576*^9}, {3.668870566576809*^9, 
   3.6688706379553947`*^9}, {3.668870830773925*^9, 3.668870911710952*^9}, {
   3.668871183235778*^9, 3.6688711880020857`*^9}, 3.668871274401019*^9}]
}, Open  ]]
},
WindowSize->{835, 1031},
WindowMargins->{{50, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1522, 41, 126, "Input"],
Cell[2105, 65, 1694, 45, 54, "Output"],
Cell[3802, 112, 516, 13, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4355, 130, 3694, 73, 156, "Input"],
Cell[8052, 205, 2181, 72, 57, "Output"],
Cell[10236, 279, 1984, 65, 57, "Output"],
Cell[12223, 346, 2787, 85, 131, "Output"],
Cell[15013, 433, 1629, 56, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16679, 494, 1735, 52, 57, "Input"],
Cell[18417, 548, 512, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18966, 567, 3129, 65, 139, "Input"],
Cell[22098, 634, 1664, 50, 85, "Output"],
Cell[23765, 686, 754, 22, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24556, 713, 2394, 58, 162, "Input"],
Cell[26953, 773, 2039, 62, 57, "Output"],
Cell[28995, 837, 1876, 57, 57, "Output"],
Cell[30874, 896, 2642, 77, 141, "Output"],
Cell[33519, 975, 540, 13, 28, "Output"],
Cell[34062, 990, 534, 13, 28, "Output"]
}, Open  ]],
Cell[34611, 1006, 70, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[34706, 1011, 1246, 37, 35, "Input"],
Cell[35955, 1050, 1191, 37, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37183, 1092, 1494, 40, 157, "Input"],
Cell[38680, 1134, 671, 21, 53, "Output"],
Cell[39354, 1157, 410, 13, 28, "Output"],
Cell[39767, 1172, 1005, 31, 63, "Output"],
Cell[40775, 1205, 371, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41183, 1221, 573, 14, 28, "Input"],
Cell[41759, 1237, 528, 15, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42324, 1257, 2805, 72, 184, "Input"],
Cell[45132, 1331, 499, 14, 35, "Output"],
Cell[45634, 1347, 387, 10, 28, "Output"]
}, Open  ]],
Cell[46036, 1360, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[46155, 1365, 3923, 117, 294, "Input"],
Cell[50081, 1484, 1620, 38, 46, "Output"],
Cell[51704, 1524, 775, 16, 50, "Output"],
Cell[52482, 1542, 35745, 601, 232, "Output"],
Cell[88230, 2145, 605, 9, 28, "Output"],
Cell[88838, 2156, 606, 9, 28, "Output"],
Cell[89447, 2167, 605, 9, 28, "Output"],
Cell[90055, 2178, 603, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90695, 2192, 189, 2, 41, "WolframAlphaLong"],
Cell[90887, 2196, 129182, 2376, 1271, "Print"]
}, Open  ]],
Cell[220084, 4575, 92, 1, 28, "Input"],
Cell[220179, 4578, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[220298, 4583, 116, 1, 41, "WolframAlphaLong"],
Cell[220417, 4586, 10481, 233, 327, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230935, 4824, 164, 2, 41, "WolframAlphaLong"],
Cell[231102, 4828, 129156, 2376, 1271, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360295, 7209, 315, 8, 52, "Input"],
Cell[360613, 7219, 396, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361046, 7235, 988, 27, 46, "Input"],
Cell[362037, 7264, 632, 16, 48, "Output"],
Cell[362672, 7282, 801, 21, 106, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
